"""Custom Individual 0 from Experiment satocemi """

from h2oaicore.ga import CustomIndividual
class Indivsatocemi_finalFalse_id0(CustomIndividual):

    def set_params(self):
        ###########################################################################
        #
        # BEGIN: VARIABLES ARE INFORMATIVE, NO NEED TO SET

        # Was best in population
        self.final_best = False
        # Was final population
        self.final_pop = True
        # Was in final model
        self.is_final = True

        # Score function's (hashed) name
        self.score_f_name = 'LOGLOSS'
        # Score  (if is_final=True, then this is the final base model out-of-fold score)
        self.score = 0.43891217885694644
        # Score standard deviation (if folds or repeats or bootstrapping)
        self.score_sd = 0.005324284309557764
        # Tournament Score (penalized by features counts or interpretabilty)
        self.tournament_score = 0.43819194256336674
        # Score history during tuning and evolution
        self.score_list = [0.447660818795085,
                           0.447660818795085,
                           0.44353492230912095,
                           0.44353492230912095,
                           0.4418437411481883,
                           0.44166106665360333,
                           0.44166106665360333,
                           0.44166106665360333,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.44022507494176377,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43891713093758344,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674,
                           0.43819194256336674]
        # Score standard deviation history during tuning and evolution
        self.score_sd_list = [0.00237827773397048,
                              0.00237827773397048,
                              0.0015190584942297652,
                              0.0015190584942297652,
                              0.0015322929901878356,
                              0.0014761358520720064,
                              0.0014761358520720064,
                              0.0014761358520720064,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001485760446284393,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.001489203555553501,
                              0.0014157372524639734,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633,
                              0.0013487868182392633]

        # Number of classes if supervised
        self.num_classes = 2
        # Labels if classification, None for regression
        self.labels = [0, 1]

        # Shape of training frame (may include target)
        self.train_shape = (114321, 133)
        # Shape of validation frame (may include target)
        self.valid_shape = None
        # Cardinality for each column
        self.cardinality_dict = {'v107': 7,
                                 'v110': 3,
                                 'v112': 22,
                                 'v113': 36,
                                 'v125': 90,
                                 'v129': 10,
                                 'v22': 18210,
                                 'v24': 5,
                                 'v3': 3,
                                 'v30': 7,
                                 'v31': 3,
                                 'v38': 12,
                                 'v47': 10,
                                 'v52': 12,
                                 'v56': 122,
                                 'v62': 8,
                                 'v66': 3,
                                 'v71': 9,
                                 'v72': 13,
                                 'v74': 3,
                                 'v75': 4,
                                 'v79': 18,
                                 'v91': 7}

        # Target column
        self.target = 'target'
        # Label counts for target column
        self.label_counts = [27300.0, 87021.0]
        # Imbalanced ratio
        self.imbalance_ratio = 3.187582417582417

        # Weight column
        self.weight_column = None
        # Time column
        self.time_column = None

        # Number of validation splits
        self.num_validation_splits = 1
        # Seed for individual
        self.seed = 150902855
        # factor of extra genes added during activation
        self.default_factor = 1
        # Ensemble level
        self.ensemble_level = 3
        #
        # END: VARIABLES ARE INFORMATIVE, NO NEED TO SET
        ###########################################################################

        ###########################################################################
        #
        # BEGIN: PARAMETERS SET FOR CUSTOM INDIVIDUAL, MAY BE SET
        #
        self.params = {'accuracy': 8,
                       'do_te': True,
                       'explore_anneal_factor': 0.9,
                       'explore_model_anneal_factor': 0.9,
                       'explore_model_prob': 0.36450000000000005,
                       'explore_model_prob_lowest': 0.1,
                       'explore_prob': 0.1,
                       'explore_prob_lowest': 0.1,
                       'grow_anneal_factor': 0.5,
                       'grow_prob': 0.2,
                       'grow_prob_lowest': 0.05,
                       'interpretability': 1,
                       'nfeatures_max': 10000000,
                       'nfeatures_min': 1,
                       'ngenes_max': 10000000,
                       'ngenes_min': 1,
                       'num_as_cat': False,
                       'output_features_to_drop_more': [],
                       'random_state': 150902855,
                       'time_tolerance': 10}
        #
        # END: PARAMETERS SET FOR CUSTOM INDIVIDUAL, MAY BE SET
        #
        ###########################################################################

    def set_model(self):
        ###########################################################################
        #
        # MODEL TYPE, MUST BE SET
        #
        # Display name corresponds to hashed (for custom recipes) display names to ensure exact match
        # One can also provide short names if only one recipe
        self.model_display_name = 'XGBoostGBM'

        ###########################################################################
        #
        # MODEL PARAMETERS, MUST BE SET
        #
        # Some system-related parameters are overwritten by DAI, e.g. gpu_id, n_jobs for xgboost
        # Monotonicity constraints remain determined by expert toml settings,
        #  e.g. monotonicity_constraints_dict can be used to constrain feature names
        #  To really set own constraints in model parameters for XGBoost and LightGBM, one can set them here,
        #  but then set monotonicity_constraints_interpretability_switch toml to 15 to avoid automatic override
        #  of those monotone_constraints params
        # Some parameters like categorical_feature for LightGBM are specific to that recipe, and automatically
        #  get handled for features that use CatTransformer
        # Some parameters like learning_rate and n_estimators are specific to that recipe, and automatically
        #  are adjusted for setting of accuracy dial.  A custom recipe wrapper could be written and one could set
        #  the static var _gbm = False to avoid such changes to learning rate and n_estimators.
        # Some parameters like disable_gpus are internal to DAI but appear in the model parameters, but they are only
        #  for information purposes and do not affect the model.
        import numpy as np
        nan = np.nan
        self.model_params = {'base_score': 0.5,
                             'booster': 'gbtree',
                             'colsample_bytree': 0.3,
                             'debug_verbose': 0,
                             'disable_gpus': True,
                             'early_stopping_rounds': 200,
                             'enable_early_stopping_rounds': True,
                             'eval_metric': 'logloss',
                             'gamma': 0.001,
                             'grow_policy': 'depthwise',
                             'importance_type': 'gain',
                             'label_counts': [27300, 87021],
                             'learning_rate': 0.02,
                             'max_bin': 64,
                             'max_delta_step': 0.0,
                             'max_depth': 5,
                             'max_leaves': 32,
                             'min_child_weight': 5,
                             'monotonicity_constraints': False,
                             'n_estimators': 3000,
                             'n_gpus': 0,
                             'n_jobs': 8,
                             'nthread': 8,
                             'num_class': 1,
                             'objective': 'binary:logistic',
                             'reg_alpha': 2.0,
                             'reg_lambda': 2.0,
                             'scale_pos_weight': 1.0,
                             'score_f_name': 'LOGLOSS',
                             'seed': 150902855,
                             'silent': 1,
                             'subsample': 1.0,
                             'tree_method': 'hist'}

        ###########################################################################
        #
        # ADJUST FINAL GBM PARAMETERS, MAY BE SET
        #
        # A list of model hyperparameters to adjust back to defaults for GA or final model building
        #  If empty list, then no changes to model parameters will be made
        #  For each item in list, set_default_params() will be used to fill those parameters for GA
        #  If _is_gbm=True for the class, then these parameters also will be changed for the final model based upon DAI dails
        #  _is_gbm = True is set for model_classes based upon LightGBM, XGBoost, CatBoost, etc.
        #   E.g. for _is_gbm=True these will be changed:
        #    * learning_rate
        #    * early_stopping_rounds
        #    * n_estimators (_fit_by_iteration in general if not None, if _fit_by_iteration=True),
        self.adjusted_params = ['learning_rate', 'early_stopping_rounds', 'n_estimators']

        ###########################################################################
        #
        # MODEL ORIGIN, VARIABLE IS INFORMATIVE, NO NEED TO SET
        #
        self.model_origin = 'FINAL BASE MODEL 1'


    def set_target_transformer(self):
        ###########################################################################
        #
        # TARGET TRANSFORMER, MAY BE SET
        #
        # The target-transformer name is controlled here for non-time-series cases
        # For time-series cases, the config toml choices still control outcome
        self.target_transformer_name = 'None'

        ###########################################################################
        #
        # TARGET TRANSFORMER PARAMETERS, MAY BE SET
        #
        # Target transformer parameters are only for informative purposes for time-series,
        #  for which the target transformer is re-generated from experiment settings and config toml,
        #  if a time-series-based target transformation
        self.target_transformer_params = {}

    def set_genes(self):
        import numpy as np
        nan = np.nan
        from collections import OrderedDict, defaultdict

        ###########################################################################
        #
        # ORIGINAL VARIABLE IMPORTANCE, VARIABLE IS INFORMATIVE, NO NEED TO SET
        #
        self.importances_orig = {'v1': 0.0027005160958582164,
                                 'v10': 0.014335816428783229,
                                 'v100': 0.0015188374171461094,
                                 'v101': 0.004302989500398495,
                                 'v102': 0.0053019483626795105,
                                 'v103': 0.0021009569672987317,
                                 'v104': 0.000935108864872006,
                                 'v105': 0.00271957652543517,
                                 'v106': 0.0008250014312725348,
                                 'v107': 0.006229756467724338,
                                 'v108': 0.0008414015373173836,
                                 'v109': 0.00014030157966583225,
                                 'v11': 0.004671849298035823,
                                 'v110': 0.02104505549272241,
                                 'v111': 0.0019306041122651488,
                                 'v112': 0.0072761927523962485,
                                 'v113': 0.03242019609620132,
                                 'v114': 0.00896706348383324,
                                 'v115': 0.0,
                                 'v116': 0.003364620063105502,
                                 'v117': 0.00024421731460800807,
                                 'v118': 0.0024574449994334293,
                                 'v119': 0.0019844851020253255,
                                 'v12': 0.014442813539568873,
                                 'v120': 0.004224829080443182,
                                 'v121': 0.0004135296863615501,
                                 'v122': 0.00377495079570199,
                                 'v123': 0.0027359829365500195,
                                 'v124': 0.0040856157655558435,
                                 'v125': 0.006264731969455222,
                                 'v126': 0.0026343182741593507,
                                 'v127': 0.00634342171213498,
                                 'v128': 0.0029974981174717102,
                                 'v129': 0.004906657398653217,
                                 'v13': 0.0019194922799664039,
                                 'v130': 0.003043221903592083,
                                 'v131': 0.006254499834717273,
                                 'v14': 0.006067707343646563,
                                 'v15': 0.0,
                                 'v16': 0.006990735850611698,
                                 'v17': 0.0015744430287670278,
                                 'v18': 0.0015025560709859402,
                                 'v19': 0.0017670508312534745,
                                 'v2': 0.0029008607657250766,
                                 'v20': 0.0004734860600410997,
                                 'v21': 0.019648798339547288,
                                 'v22': 0.011938186028539365,
                                 'v23': 0.002388331019115262,
                                 'v24': 0.03316849571681947,
                                 'v25': 0.0012150612399774677,
                                 'v26': 0.007053118293920746,
                                 'v27': 0.004926791307629238,
                                 'v28': 0.0023396881088364784,
                                 'v29': 0.0021198421810497566,
                                 'v3': 0.001797721729314188,
                                 'v30': 0.01495361139465618,
                                 'v31': 0.04600030988636509,
                                 'v32': 0.002850362862298802,
                                 'v33': 0.003610937724541802,
                                 'v34': 0.012159325005220425,
                                 'v35': 0.0014707936150618046,
                                 'v36': 0.0032296606548280747,
                                 'v37': 0.0021588465148810053,
                                 'v38': 0.0026960651201458157,
                                 'v39': 0.001120423617322449,
                                 'v4': 0.0007075234086083053,
                                 'v40': 0.014609158044829564,
                                 'v41': 0.0005399221300256942,
                                 'v42': 0.0031531007027871434,
                                 'v43': 0.004202222559851,
                                 'v44': 0.0028907125008077305,
                                 'v45': 0.0033450799377815997,
                                 'v46': 0.0006328773878519117,
                                 'v47': 0.03222462967077756,
                                 'v48': 0.00011710222151870865,
                                 'v49': 0.0026908554800060963,
                                 'v5': 0.0011499587282848879,
                                 'v50': 0.2227377759477248,
                                 'v51': 0.0005503944997217629,
                                 'v52': 0.011555872396279546,
                                 'v53': 0.0024767655749088216,
                                 'v54': 0.0011527609481228993,
                                 'v55': 0.0016571672100572313,
                                 'v56': 0.06276985347592572,
                                 'v57': 0.00029981063489619754,
                                 'v58': 0.00331509125056949,
                                 'v59': 0.006799932434725256,
                                 'v6': 0.005534005205353944,
                                 'v60': 0.0009465103427375845,
                                 'v61': 0.0018396062559168955,
                                 'v62': 0.0002827567045390644,
                                 'v63': 0.001776262963991427,
                                 'v64': 0.0008725446198065861,
                                 'v65': 0.0008514705154370403,
                                 'v66': 0.09612092749402956,
                                 'v67': 0.0007733014742183653,
                                 'v68': 0.0034504640723079325,
                                 'v69': 0.0008983501549146755,
                                 'v7': 0.0007519936240537249,
                                 'v70': 0.0030505051116318286,
                                 'v71': 0.009714101113095619,
                                 'v72': 0.008592741642239655,
                                 'v73': 0.002519717463090862,
                                 'v74': 0.0010481612424429409,
                                 'v75': 0.0010522822831208695,
                                 'v76': 0.0009089900047590521,
                                 'v77': 0.001003491781189206,
                                 'v78': 0.002072337751047047,
                                 'v79': 0.03025960162033104,
                                 'v8': 0.0035473843489767024,
                                 'v80': 0.0030654397713019005,
                                 'v81': 0.0,
                                 'v82': 0.008619307768100616,
                                 'v83': 0.0006515098929697709,
                                 'v84': 0.00251913332380023,
                                 'v85': 0.0034018197038592,
                                 'v86': 0.00181613434077265,
                                 'v87': 0.001675700778890168,
                                 'v88': 0.003909795737683262,
                                 'v89': 0.0018359241912795845,
                                 'v9': 0.0009291680934864149,
                                 'v90': 0.004162389497431632,
                                 'v91': 0.00716350161288564,
                                 'v92': 0.0014968933139387877,
                                 'v93': 0.000711348836085936,
                                 'v94': 0.001600934098423484,
                                 'v95': 0.0004414856621292221,
                                 'v96': 0.0,
                                 'v97': 0.005117685125892769,
                                 'v98': 0.0019143425558877626,
                                 'v99': 0.0030426972613762098}

        ###########################################################################
        #
        # COLUMN TYPES, CAN BE SET
        #
        # By default self._from_exp['columns'] = True and so this is only informative
        # If set self._from_exp['columns'] = False, then the below is used
        # This allows one to control the data types for each column
        self.columns = {'all': ['v1',
                                'v10',
                                'v100',
                                'v101',
                                'v102',
                                'v103',
                                'v104',
                                'v105',
                                'v106',
                                'v107',
                                'v108',
                                'v109',
                                'v11',
                                'v110',
                                'v111',
                                'v112',
                                'v113',
                                'v114',
                                'v115',
                                'v116',
                                'v117',
                                'v118',
                                'v119',
                                'v12',
                                'v120',
                                'v121',
                                'v122',
                                'v123',
                                'v124',
                                'v125',
                                'v126',
                                'v127',
                                'v128',
                                'v129',
                                'v13',
                                'v130',
                                'v131',
                                'v14',
                                'v15',
                                'v16',
                                'v17',
                                'v18',
                                'v19',
                                'v2',
                                'v20',
                                'v21',
                                'v22',
                                'v23',
                                'v24',
                                'v25',
                                'v26',
                                'v27',
                                'v28',
                                'v29',
                                'v3',
                                'v30',
                                'v31',
                                'v32',
                                'v33',
                                'v34',
                                'v35',
                                'v36',
                                'v37',
                                'v38',
                                'v39',
                                'v4',
                                'v40',
                                'v41',
                                'v42',
                                'v43',
                                'v44',
                                'v45',
                                'v46',
                                'v47',
                                'v48',
                                'v49',
                                'v5',
                                'v50',
                                'v51',
                                'v52',
                                'v53',
                                'v54',
                                'v55',
                                'v56',
                                'v57',
                                'v58',
                                'v59',
                                'v6',
                                'v60',
                                'v61',
                                'v62',
                                'v63',
                                'v64',
                                'v65',
                                'v66',
                                'v67',
                                'v68',
                                'v69',
                                'v7',
                                'v70',
                                'v71',
                                'v72',
                                'v73',
                                'v74',
                                'v75',
                                'v76',
                                'v77',
                                'v78',
                                'v79',
                                'v8',
                                'v80',
                                'v81',
                                'v82',
                                'v83',
                                'v84',
                                'v85',
                                'v86',
                                'v87',
                                'v88',
                                'v89',
                                'v9',
                                'v90',
                                'v91',
                                'v92',
                                'v93',
                                'v94',
                                'v95',
                                'v96',
                                'v97',
                                'v98',
                                'v99'],
                        'any': ['v1',
                                'v10',
                                'v100',
                                'v101',
                                'v102',
                                'v103',
                                'v104',
                                'v105',
                                'v106',
                                'v107',
                                'v108',
                                'v109',
                                'v11',
                                'v110',
                                'v111',
                                'v112',
                                'v113',
                                'v114',
                                'v115',
                                'v116',
                                'v117',
                                'v118',
                                'v119',
                                'v12',
                                'v120',
                                'v121',
                                'v122',
                                'v123',
                                'v124',
                                'v125',
                                'v126',
                                'v127',
                                'v128',
                                'v129',
                                'v13',
                                'v130',
                                'v131',
                                'v14',
                                'v15',
                                'v16',
                                'v17',
                                'v18',
                                'v19',
                                'v2',
                                'v20',
                                'v21',
                                'v22',
                                'v23',
                                'v24',
                                'v25',
                                'v26',
                                'v27',
                                'v28',
                                'v29',
                                'v3',
                                'v30',
                                'v31',
                                'v32',
                                'v33',
                                'v34',
                                'v35',
                                'v36',
                                'v37',
                                'v38',
                                'v39',
                                'v4',
                                'v40',
                                'v41',
                                'v42',
                                'v43',
                                'v44',
                                'v45',
                                'v46',
                                'v47',
                                'v48',
                                'v49',
                                'v5',
                                'v50',
                                'v51',
                                'v52',
                                'v53',
                                'v54',
                                'v55',
                                'v56',
                                'v57',
                                'v58',
                                'v59',
                                'v6',
                                'v60',
                                'v61',
                                'v62',
                                'v63',
                                'v64',
                                'v65',
                                'v66',
                                'v67',
                                'v68',
                                'v69',
                                'v7',
                                'v70',
                                'v71',
                                'v72',
                                'v73',
                                'v74',
                                'v75',
                                'v76',
                                'v77',
                                'v78',
                                'v79',
                                'v8',
                                'v80',
                                'v81',
                                'v82',
                                'v83',
                                'v84',
                                'v85',
                                'v86',
                                'v87',
                                'v88',
                                'v89',
                                'v9',
                                'v90',
                                'v91',
                                'v92',
                                'v93',
                                'v94',
                                'v95',
                                'v96',
                                'v97',
                                'v98',
                                'v99'],
                        'categorical': ['v107',
                                        'v110',
                                        'v112',
                                        'v113',
                                        'v125',
                                        'v22',
                                        'v24',
                                        'v3',
                                        'v30',
                                        'v31',
                                        'v47',
                                        'v52',
                                        'v56',
                                        'v66',
                                        'v71',
                                        'v74',
                                        'v75',
                                        'v79',
                                        'v91'],
                        'catlabel': ['v107',
                                     'v110',
                                     'v112',
                                     'v113',
                                     'v125',
                                     'v22',
                                     'v24',
                                     'v3',
                                     'v30',
                                     'v31',
                                     'v47',
                                     'v52',
                                     'v56',
                                     'v66',
                                     'v71',
                                     'v74',
                                     'v75',
                                     'v79',
                                     'v91'],
                        'date': [],
                        'datetime': [],
                        'id': [],
                        'image': [],
                        'numeric': ['v1',
                                    'v10',
                                    'v100',
                                    'v101',
                                    'v102',
                                    'v103',
                                    'v104',
                                    'v105',
                                    'v106',
                                    'v108',
                                    'v109',
                                    'v11',
                                    'v111',
                                    'v114',
                                    'v115',
                                    'v116',
                                    'v117',
                                    'v118',
                                    'v119',
                                    'v12',
                                    'v120',
                                    'v121',
                                    'v122',
                                    'v123',
                                    'v124',
                                    'v126',
                                    'v127',
                                    'v128',
                                    'v129',
                                    'v13',
                                    'v130',
                                    'v131',
                                    'v14',
                                    'v15',
                                    'v16',
                                    'v17',
                                    'v18',
                                    'v19',
                                    'v2',
                                    'v20',
                                    'v21',
                                    'v23',
                                    'v25',
                                    'v26',
                                    'v27',
                                    'v28',
                                    'v29',
                                    'v32',
                                    'v33',
                                    'v34',
                                    'v35',
                                    'v36',
                                    'v37',
                                    'v38',
                                    'v39',
                                    'v4',
                                    'v40',
                                    'v41',
                                    'v42',
                                    'v43',
                                    'v44',
                                    'v45',
                                    'v46',
                                    'v48',
                                    'v49',
                                    'v5',
                                    'v50',
                                    'v51',
                                    'v53',
                                    'v54',
                                    'v55',
                                    'v57',
                                    'v58',
                                    'v59',
                                    'v6',
                                    'v60',
                                    'v61',
                                    'v62',
                                    'v63',
                                    'v64',
                                    'v65',
                                    'v67',
                                    'v68',
                                    'v69',
                                    'v7',
                                    'v70',
                                    'v72',
                                    'v73',
                                    'v76',
                                    'v77',
                                    'v78',
                                    'v8',
                                    'v80',
                                    'v81',
                                    'v82',
                                    'v83',
                                    'v84',
                                    'v85',
                                    'v86',
                                    'v87',
                                    'v88',
                                    'v89',
                                    'v9',
                                    'v90',
                                    'v92',
                                    'v93',
                                    'v94',
                                    'v95',
                                    'v96',
                                    'v97',
                                    'v98',
                                    'v99'],
                        'ohe_categorical': ['v107',
                                            'v110',
                                            'v112',
                                            'v113',
                                            'v24',
                                            'v3',
                                            'v30',
                                            'v31',
                                            'v47',
                                            'v52',
                                            'v66',
                                            'v71',
                                            'v74',
                                            'v75',
                                            'v79',
                                            'v91'],
                        'raw': [],
                        'text': [],
                        'time_column': []}

        ###########################################################################
        #
        # GENOME, MUST BE SET
        #
        # All valid parameters for genes should be provided, except:
        # * output_features_to_drop need not be passed if empty list
        # * Mutations need not be provided if want to use default values
        # Mutations or valid parameters are not shown if none, like for OriginalTransformer
        # 'gene_index' is optional, except if use:
        # *) transformed feature names in (e.g.) monotonicity_constraints_dict toml
        # *) multiple layers with specific col_dict per layer for layer > 0
        # NOTE: While some importance variable data is provided, the newly-generated individual has freshly-determined importances

        # Gene Normalized Importance: 0.013402
        # Transformed Feature Names and Importances: {'23_v123': 0.01340173278003931}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v123'], 'random_state': 150902878}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=23, **params)

        # Gene Normalized Importance: 0.020826
        # Transformed Feature Names and Importances: {'40_v21': 0.020825982093811035}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v21'], 'random_state': 150902895}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=40, **params)

        # Gene Normalized Importance: 0.026218
        # Transformed Feature Names and Importances: {'49_v34': 0.0262184776365757}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v34'], 'random_state': 150902904}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=49, **params)

        # Gene Normalized Importance: 0.034011
        # Transformed Feature Names and Importances: {'56_v40': 0.0340108796954155}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v40'], 'random_state': 150902911}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=56, **params)

        # Gene Normalized Importance: 0.26158
        # Transformed Feature Names and Importances: {'66_v50': 0.2615826725959778}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v50'], 'random_state': 150902921}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=66, **params)

        # Gene Normalized Importance: 0.021869
        # Transformed Feature Names and Importances: {'74_v6': 0.02186853624880314}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v6'], 'random_state': 150902929}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=74, **params)

        # Gene Normalized Importance: 0.062433
        # Transformed Feature Names and Importances: {'86_v72': 0.06243319436907768}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v72'], 'random_state': 150902941}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=86, **params)

        # Gene Normalized Importance: 0.012644
        # Transformed Feature Names and Importances: {'112_CVTE:v107.0': 0.01264355517923832}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v107'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 150902874,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=112, **params)

        # Gene Normalized Importance: 0.016211
        # Transformed Feature Names and Importances: {'117_CVTE:v22.0': 0.016210930421948433}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v22'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 150902879,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=117, **params)

        # Gene Normalized Importance: 0.019897
        # Transformed Feature Names and Importances: {'124_CVTE:v56.0': 0.019897038117051125}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 150902886,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=124, **params)

        # Gene Normalized Importance: 0.12347
        # Transformed Feature Names and Importances: {'125_CVTE:v66.0': 0.12346958369016647}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 150902887,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=125, **params)

        # Gene Normalized Importance: 0.018926
        # Transformed Feature Names and Importances: {'133_NumToCatWoE:v114:v120:v35.0': 0.018926117569208145}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 25,
                  'cv_type': 'KFold',
                  'num_cols': ['v114', 'v120', 'v35'],
                  'num_folds': 5,
                  'random_state': 2622855399}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=133, **params)

        # Gene Normalized Importance: 0.01963
        # Transformed Feature Names and Importances: {'136_CVTE:v3:v30:v31:v47:v52:v56:v66:v71.0': 0.01963006518781185}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v3', 'v30', 'v31', 'v47', 'v52', 'v56', 'v66', 'v71'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 3852300108,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=136, **params)

        # Gene Normalized Importance: 0.082908
        # Transformed Feature Names and Importances: {'138_WoE:v107:v112:v22:v24:v30:v75.0': 0.0829075500369072}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v112', 'v22', 'v24', 'v30', 'v75'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2822840834}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=138, **params)

        # Gene Normalized Importance: 0.042954
        # Transformed Feature Names and Importances: {'150_NumCatTE:v3:v40:v47:v50:v52:v66.0': 0.04295394569635391}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v3', 'v47', 'v52', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v40', 'v50'],
                  'num_folds': 5,
                  'random_state': 1706574712,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=150, **params)

        # Gene Normalized Importance: 0.099073
        # Transformed Feature Names and Importances: {'156_ClusterDist8:v1:v88.1': 0.018529145047068596, '156_ClusterDist8:v1:v88.7': 0.018130574375391006, '156_ClusterDist8:v1:v88.0': 0.015329872258007526, '156_ClusterDist8:v1:v88.5': 0.014349405653774738, '156_ClusterDist8:v1:v88.3': 0.01255772728472948, '156_ClusterDist8:v1:v88.6': 0.011220688000321388, '156_ClusterDist8:v1:v88.4': 0.008955529890954494, '156_ClusterDist8:v1:v88.2': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v1', 'v88'],
                  'random_state': 1423976138,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=156, **params)

        # Gene Normalized Importance:  0.1317
        # Transformed Feature Names and Importances: {'159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.7': 0.021804112941026688, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.2': 0.017166826874017715, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.5': 0.016969507560133934, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.4': 0.01595970429480076, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.1': 0.01589556224644184, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.0': 0.015851512551307678, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.3': 0.015349501743912697, '159_ClusterDist8:v12:v27:v40:v50:v55:v59:v6.6': 0.012703322805464268}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v12', 'v27', 'v40', 'v50', 'v55', 'v59', 'v6'],
                  'random_state': 1117684451,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=159, **params)

        # Gene Normalized Importance: 0.11036
        # Transformed Feature Names and Importances: {'161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.2': 0.026154231280088425, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.5': 0.018051419407129288, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.7': 0.015870559960603714, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.4': 0.015455136075615883, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.1': 0.015028288587927818, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.3': 0.010614036582410336, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.0': 0.009191256947815418, '161_ClusterDist8:v100:v101:v122:v127:v131:v49:v50:v89:v92.6': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v100',
                               'v101',
                               'v122',
                               'v127',
                               'v131',
                               'v49',
                               'v50',
                               'v89',
                               'v92'],
                  'random_state': 3756040987,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=161, **params)

        # Gene Normalized Importance: 0.021648
        # Transformed Feature Names and Importances: {'166_NumCatTE:v110:v124:v40:v62:v66:v82:v91.0': 0.02164849080145359}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v110', 'v66', 'v91'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v124', 'v40', 'v62', 'v82'],
                  'num_folds': 5,
                  'random_state': 3838468547,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=166, **params)

        # Gene Normalized Importance: 0.065764
        # Transformed Feature Names and Importances: {'171_WoE:v22:v47:v52:v66.0': 0.06576418876647949}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v47', 'v52', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1255736664}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=171, **params)

        # Gene Normalized Importance: 0.074902
        # Transformed Feature Names and Importances: {'173_CVCatNumEnc:v47:v56:v79:v37.mean': 0.022926123812794685, '173_CVCatNumEnc:v47:v56:v79:v23.mean': 0.02036735601723194, '173_CVCatNumEnc:v47:v56:v79:v39.mean': 0.015837015584111214, '173_CVCatNumEnc:v47:v56:v79:v50.mean': 0.015771683305501938}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v47', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 1,
                  'num_cols': ['v23', 'v37', 'v39', 'v50'],
                  'num_folds': 5,
                  'random_state': 3027106791}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=173, **params)

        # Gene Normalized Importance: 0.017425
        # Transformed Feature Names and Importances: {'178_CVTE:v113:v47:v52:v56:v66.0': 0.017424676567316055}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v47', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1237935320,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=178, **params)

        # Gene Normalized Importance:   0.161
        # Transformed Feature Names and Importances: {'180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.3': 0.03747449815273285, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.7': 0.019352318719029427, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.2': 0.01933280937373638, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.4': 0.019095081835985184, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.5': 0.017498813569545746, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.6': 0.01739365980029106, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.0': 0.01655426062643528, '180_ClusterDist8:v103:v108:v114:v124:v21:v50:v6:v76:v82.1': 0.014301522634923458}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v103', 'v108', 'v114', 'v124', 'v21', 'v50', 'v6', 'v76', 'v82'],
                  'random_state': 347126135,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=180, **params)

        # Gene Normalized Importance: 0.021626
        # Transformed Feature Names and Importances: {'183_CVTE:v113:v30:v31:v47:v66:v71:v79.0': 0.021626019850373268}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v30', 'v31', 'v47', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 260565715,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=183, **params)

        # Gene Normalized Importance: 0.063146
        # Transformed Feature Names and Importances: {'186_CVCatNumEnc:v24:v31:v56:v66:v40.count': 0.024374255910515785, '186_CVCatNumEnc:v24:v31:v56:v66:v87.count': 0.019797200337052345, '186_CVCatNumEnc:v24:v31:v56:v66:v50.count': 0.01897408999502659}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v24', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': None,
                  'num_cols': ['v40', 'v50', 'v87'],
                  'num_folds': 5,
                  'random_state': 842338288}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=186, **params)

        # Gene Normalized Importance: 0.027936
        # Transformed Feature Names and Importances: {'189_CVTE:v110:v113:v47:v56:v66:v79.0': 0.027936361730098724}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v110', 'v113', 'v47', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 136162137,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=189, **params)

        # Gene Normalized Importance: 0.029724
        # Transformed Feature Names and Importances: {'193_CVTE:v107:v66.0': 0.029723502695560455}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v107', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 254739749,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=193, **params)

        # Gene Normalized Importance: 0.05891
        # Transformed Feature Names and Importances: {'194_CVCatNumEnc:v107:v113:v56:v79:v131.count': 0.01688303053379059, '194_CVCatNumEnc:v107:v113:v56:v79:v50.count': 0.015936285257339478, '194_CVCatNumEnc:v107:v113:v56:v79:v73.count': 0.013188104145228863, '194_CVCatNumEnc:v107:v113:v56:v79:v100.count': 0.012902232818305492}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v107', 'v113', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 100,
                  'num_cols': ['v100', 'v131', 'v50', 'v73'],
                  'num_folds': 5,
                  'random_state': 3026457513}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=194, **params)

        # Gene Normalized Importance: 0.017919
        # Transformed Feature Names and Importances: {'196_CVTE:v30:v52.0': 0.01791934110224247}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v30', 'v52'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 829198633,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=196, **params)

        # Gene Normalized Importance: 0.051051
        # Transformed Feature Names and Importances: {'200_TruncSVD:v10:v114:v12:v21:v33:v50:v89.1': 0.021686719730496407, '200_TruncSVD:v10:v114:v12:v21:v33:v50:v89.2': 0.017303643748164177, '200_TruncSVD:v10:v114:v12:v21:v33:v50:v89.0': 0.01206074096262455}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v10', 'v114', 'v12', 'v21', 'v33', 'v50', 'v89'],
                  'random_state': 1296190994}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=200, **params)

        # Gene Normalized Importance: 0.044426
        # Transformed Feature Names and Importances: {'203_TruncSVD:v122:v129:v21:v42:v54.2': 0.02126823365688324, '203_TruncSVD:v122:v129:v21:v42:v54.0': 0.014021393842995167, '203_TruncSVD:v122:v129:v21:v42:v54.1': 0.009136175736784935}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v122', 'v129', 'v21', 'v42', 'v54'],
                  'random_state': 2804595851}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=203, **params)

        # Gene Normalized Importance: 0.02539
        # Transformed Feature Names and Importances: {'206_CVCatNumEnc:v113:v125:v30:v45.count': 0.025390364229679108}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v125', 'v30'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 100,
                  'num_cols': ['v45'],
                  'num_folds': 5,
                  'random_state': 337640210}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=206, **params)

        # Gene Normalized Importance: 0.034793
        # Transformed Feature Names and Importances: {'207_WoE:v107:v112:v22:v47:v56:v66:v91.0': 0.03479311615228653}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v112', 'v22', 'v47', 'v56', 'v66', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 725989499}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=207, **params)

        # Gene Normalized Importance: 0.13168
        # Transformed Feature Names and Importances: {'208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.6': 0.026574568822979927, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.5': 0.020279213786125183, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.4': 0.01518744695931673, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.1': 0.015080278739333153, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.7': 0.014773747883737087, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.3': 0.013916827738285065, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.2': 0.013283687643706799, '208_ClusterDist8:v10:v102:v103:v114:v122:v14:v34:v50.0': 0.012583048082888126}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v102', 'v103', 'v114', 'v122', 'v14', 'v34', 'v50'],
                  'random_state': 296055541,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=208, **params)

        # Gene Normalized Importance: 0.016615
        # Transformed Feature Names and Importances: {'212_TruncSVD:v10:v101:v37:v40:v42:v50:v6:v73:v88.0': 0.016615159809589386}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 1,
                  'num_cols': ['v10', 'v101', 'v37', 'v40', 'v42', 'v50', 'v6', 'v73', 'v88'],
                  'random_state': 3475849028}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=212, **params)

        # Gene Normalized Importance:  1.4943
        # Transformed Feature Names and Importances: {'216_ClusterDist10:v50.4': 0.4189034700393677, '216_ClusterDist10:v50.8': 0.2740795612335205, '216_ClusterDist10:v50.3': 0.22981233894824982, '216_ClusterDist10:v50.6': 0.16003261506557465, '216_ClusterDist10:v50.9': 0.1509496569633484, '216_ClusterDist10:v50.1': 0.08968829363584518, '216_ClusterDist10:v50.0': 0.06308687478303909, '216_ClusterDist10:v50.7': 0.04865847900509834, '216_ClusterDist10:v50.2': 0.04376934468746185, '216_ClusterDist10:v50.5': 0.015318021178245544}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v50'],
                  'random_state': 920706112,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=216, **params)

        # Gene Normalized Importance: 0.027644
        # Transformed Feature Names and Importances: {'221_NumCatTE:v112:v129:v24:v32:v50:v97.0': 0.02764442004263401}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v112', 'v24'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v129', 'v32', 'v50', 'v97'],
                  'num_folds': 5,
                  'random_state': 310082409,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=221, **params)

        # Gene Normalized Importance: 0.013305
        # Transformed Feature Names and Importances: {'225_CVTE:v24:v56:v79.0': 0.013304661959409714}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 3559854693,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=225, **params)

        # Gene Normalized Importance: 0.015433
        # Transformed Feature Names and Importances: {'228_WoE:v31:v91.0': 0.01543309073895216}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v31', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2768835784}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=228, **params)

        # Gene Normalized Importance: 0.023975
        # Transformed Feature Names and Importances: {'232_WoE:v56:v66.0': 0.023974809795618057}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 265085279}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=232, **params)

        # Gene Normalized Importance: 0.067166
        # Transformed Feature Names and Importances: {'238_CVCatNumEnc:v24:v30:v56:v66:v73.count': 0.02095930092036724, '238_CVCatNumEnc:v24:v30:v56:v66:v12.count': 0.016949474811553955, '238_CVCatNumEnc:v24:v30:v56:v66:v82.count': 0.015430625528097153, '238_CVCatNumEnc:v24:v30:v56:v66:v50.count': 0.013826954178512096}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v24', 'v30', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 1,
                  'num_cols': ['v12', 'v50', 'v73', 'v82'],
                  'num_folds': 5,
                  'random_state': 82369}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=238, **params)

        # Gene Normalized Importance: 0.020583
        # Transformed Feature Names and Importances: {'243_NumCatTE:v22:v27:v50:v60:v66:v79:v86.0': 0.020582927390933037}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cat_cols': ['v22', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v27', 'v50', 'v60', 'v86'],
                  'num_folds': 5,
                  'random_state': 3500162475,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=243, **params)

        # Gene Normalized Importance: 0.016764
        # Transformed Feature Names and Importances: {'244_NumCatTE:v10:v113:v31:v56.0': 0.016763729974627495}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v113', 'v31', 'v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v10'],
                  'num_folds': 5,
                  'random_state': 2343893944,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=244, **params)

        # Gene Normalized Importance: 0.016683
        # Transformed Feature Names and Importances: {'247_NumToCatWoE:v123:v43.0': 0.016683101654052734}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 250,
                  'cv_type': 'KFold',
                  'num_cols': ['v123', 'v43'],
                  'num_folds': 5,
                  'random_state': 1150675666}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=247, **params)

        # Gene Normalized Importance: 0.053755
        # Transformed Feature Names and Importances: {'248_TruncSVD:v101:v16:v50:v64.2': 0.027204090729355812, '248_TruncSVD:v101:v16:v50:v64.0': 0.01804102584719658, '248_TruncSVD:v101:v16:v50:v64.1': 0.008509931154549122}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v101', 'v16', 'v50', 'v64'],
                  'random_state': 1160172101}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=248, **params)

        # Gene Normalized Importance: 0.062565
        # Transformed Feature Names and Importances: {'251_CVCatNumEnc:v66:v50.count': 0.05222130939364433, '251_CVCatNumEnc:v66:v69.count': 0.010343590751290321}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 100,
                  'num_cols': ['v50', 'v69'],
                  'num_folds': 5,
                  'random_state': 2438931163}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=251, **params)

        # Gene Normalized Importance: 0.073471
        # Transformed Feature Names and Importances: {'253_CVCatNumEnc:v113:v56:v26.min': 0.020976630970835686, '253_CVCatNumEnc:v113:v56:v65.min': 0.01983315870165825, '253_CVCatNumEnc:v113:v56:v82.min': 0.01831665262579918, '253_CVCatNumEnc:v113:v56:v58.min': 0.014344289898872375}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 10,
                  'num_cols': ['v26', 'v58', 'v65', 'v82'],
                  'num_folds': 5,
                  'random_state': 3841268386}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=253, **params)

        # Gene Normalized Importance: 0.022313
        # Transformed Feature Names and Importances: {'262_TruncSVD:v23:v29:v40:v53:v67:v80.0': 0.022312520071864128}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 1,
                  'num_cols': ['v23', 'v29', 'v40', 'v53', 'v67', 'v80'],
                  'random_state': 4137040507}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=262, **params)

        # Gene Normalized Importance: 0.46364
        # Transformed Feature Names and Importances: {'267_WoE:v24:v31:v56:v66.0': 0.46364468336105347}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v24', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 102207816}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=267, **params)

        # Gene Normalized Importance: 0.14745
        # Transformed Feature Names and Importances: {'269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.5': 0.03191973641514778, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.4': 0.025181462988257408, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.0': 0.024652453139424324, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.7': 0.01805195026099682, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.6': 0.016871027648448944, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.1': 0.01665659248828888, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.2': 0.014112690463662148, '269_ClusterDist8:v114:v118:v127:v131:v33:v34:v50.3': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v114', 'v118', 'v127', 'v131', 'v33', 'v34', 'v50'],
                  'random_state': 3668473244,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=269, **params)

        # Gene Normalized Importance: 0.014408
        # Transformed Feature Names and Importances: {'270_WoE:v112:v31:v47:v71:v79.0': 0.014408367685973644}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v112', 'v31', 'v47', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4125980153}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=270, **params)

        # Gene Normalized Importance: 0.11657
        # Transformed Feature Names and Importances: {'273_ClusterDist8:v11:v127:v53:v90.4': 0.03152548149228096, '273_ClusterDist8:v11:v127:v53:v90.7': 0.018214257434010506, '273_ClusterDist8:v11:v127:v53:v90.0': 0.017761340364813805, '273_ClusterDist8:v11:v127:v53:v90.2': 0.01667882315814495, '273_ClusterDist8:v11:v127:v53:v90.5': 0.011553050950169563, '273_ClusterDist8:v11:v127:v53:v90.1': 0.011546874418854713, '273_ClusterDist8:v11:v127:v53:v90.6': 0.00928767304867506, '273_ClusterDist8:v11:v127:v53:v90.3': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v11', 'v127', 'v53', 'v90'],
                  'random_state': 3326691362,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=273, **params)

        # Gene Normalized Importance: 0.015427
        # Transformed Feature Names and Importances: {'276_WoE:v107:v113:v52:v66:v71:v79:v91.0': 0.01542726531624794}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v113', 'v52', 'v66', 'v71', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2420992431}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=276, **params)

        # Gene Normalized Importance: 0.019989
        # Transformed Feature Names and Importances: {'281_WoE:v107:v113:v24:v52:v56:v66.0': 0.01998874731361866}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v113', 'v24', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2333406671}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=281, **params)

        # Gene Normalized Importance: 0.018993
        # Transformed Feature Names and Importances: {'282_CVTE:v24:v47:v52:v56:v66.0': 0.01899276115000248}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v47', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1842058634,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=282, **params)

        # Gene Normalized Importance: 0.50802
        # Transformed Feature Names and Importances: {'287_WoE:v110:v31:v56:v66.0': 0.5080222487449646}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3483795528}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=287, **params)

        # Gene Normalized Importance: 0.030687
        # Transformed Feature Names and Importances: {'290_NumToCatWoE:v111:v118:v20:v50:v54:v80:v82.0': 0.030686812475323677}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 25,
                  'cv_type': 'KFold',
                  'num_cols': ['v111', 'v118', 'v20', 'v50', 'v54', 'v80', 'v82'],
                  'num_folds': 5,
                  'random_state': 527433480}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=290, **params)

        # Gene Normalized Importance: 0.024935
        # Transformed Feature Names and Importances: {'295_WoE:v112:v125:v22:v30:v56:v71:v79.0': 0.02493530884385109}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v112', 'v125', 'v22', 'v30', 'v56', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3966537517}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=295, **params)

        # Gene Normalized Importance: 0.038902
        # Transformed Feature Names and Importances: {'302_WoE:v22:v24:v56:v66:v79.0': 0.038901783525943756}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v24', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4145222951}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=302, **params)

        # Gene Normalized Importance: 0.10667
        # Transformed Feature Names and Importances: {'311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.0': 0.025817593559622765, '311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.1': 0.020885935053229332, '311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.4': 0.020005889236927032, '311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.2': 0.017203591763973236, '311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.5': 0.012487998232245445, '311_ClusterDist6:v131:v23:v34:v46:v49:v5:v50:v85.3': 0.010264777578413486}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v131', 'v23', 'v34', 'v46', 'v49', 'v5', 'v50', 'v85'],
                  'random_state': 1254661524,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=311, **params)

        # Gene Normalized Importance: 0.027102
        # Transformed Feature Names and Importances: {'312_CVCatNumEnc:v107:v30:v31:v56:v127.sd': 0.013590571470558643, '312_CVCatNumEnc:v107:v30:v31:v56:v25.sd': 0.013511552475392818}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v107', 'v30', 'v31', 'v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v127', 'v25'],
                  'num_folds': 5,
                  'random_state': 448796330}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=312, **params)

        # Gene Normalized Importance: 0.044036
        # Transformed Feature Names and Importances: {'318_CVTE:v31:v66:v79.0': 0.04403633251786232}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v31', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 367208263,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=318, **params)

        # Gene Normalized Importance: 0.07382
        # Transformed Feature Names and Importances: {'326_CVCatNumEnc:v113:v24:v31:v83.sd': 0.0209827721118927, '326_CVCatNumEnc:v113:v24:v31:v105.sd': 0.019838236272335052, '326_CVCatNumEnc:v113:v24:v31:v12.sd': 0.01784689538180828, '326_CVCatNumEnc:v113:v24:v31:v14.sd': 0.01515241526067257}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v24', 'v31'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 1,
                  'num_cols': ['v105', 'v12', 'v14', 'v83'],
                  'num_folds': 5,
                  'random_state': 9561757}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=326, **params)

        # Gene Normalized Importance: 0.015562
        # Transformed Feature Names and Importances: {'334_NumCatTE:v113:v131:v47:v50:v79:v97.0': 0.015562091022729874}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v113', 'v47', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v131', 'v50', 'v97'],
                  'num_folds': 5,
                  'random_state': 201670312,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=334, **params)

        # Gene Normalized Importance: 0.021913
        # Transformed Feature Names and Importances: {'336_CVTE:v24:v3:v30:v66.0': 0.021913254633545876}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v3', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 2139232876,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=336, **params)

        # Gene Normalized Importance: 0.020793
        # Transformed Feature Names and Importances: {'337_WoE:v110:v24:v47:v52:v66.0': 0.020793456584215164}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v24', 'v47', 'v52', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2010478716}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=337, **params)

        # Gene Normalized Importance: 0.01927
        # Transformed Feature Names and Importances: {'344_Freq:v112:v52:v66:v79': 0.01926950179040432}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v112', 'v52', 'v66', 'v79'],
                  'norm': False,
                  'random_state': 861273446}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=344, **params)

        # Gene Normalized Importance: 0.049551
        # Transformed Feature Names and Importances: {'346_CVCatNumEnc:v113:v56:v79:v43.count': 0.01891487091779709, '346_CVCatNumEnc:v113:v56:v79:v126.count': 0.018291980028152466, '346_CVCatNumEnc:v113:v56:v79:v38.count': 0.01234380155801773}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 3,
                  'num_cols': ['v126', 'v38', 'v43'],
                  'num_folds': 5,
                  'random_state': 1383004173}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=346, **params)

        # Gene Normalized Importance: 0.014949
        # Transformed Feature Names and Importances: {'347_NumToCatWoE:v114:v50:v72.0': 0.014948558062314987}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 100,
                  'cv_type': 'KFold',
                  'num_cols': ['v114', 'v50', 'v72'],
                  'num_folds': 5,
                  'random_state': 3994834429}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=347, **params)

        # Gene Normalized Importance: 0.061972
        # Transformed Feature Names and Importances: {'348_CVCatNumEnc:v112:v31:v47:v52:v118.sd': 0.018200619146227837, '348_CVCatNumEnc:v112:v31:v47:v52:v51.sd': 0.01808016188442707, '348_CVCatNumEnc:v112:v31:v47:v52:v78.sd': 0.0129672447219491, '348_CVCatNumEnc:v112:v31:v47:v52:v84.sd': 0.012723797000944614}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v112', 'v31', 'v47', 'v52'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 1,
                  'num_cols': ['v118', 'v51', 'v78', 'v84'],
                  'num_folds': 5,
                  'random_state': 2204068699}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=348, **params)

        # Gene Normalized Importance: 0.056964
        # Transformed Feature Names and Importances: {'352_CVCatNumEnc:v91:v58.sd': 0.016704248264431953, '352_CVCatNumEnc:v91:v25.sd': 0.01613345928490162, '352_CVCatNumEnc:v91:v111.sd': 0.012703394517302513, '352_CVCatNumEnc:v91:v32.sd': 0.011422732844948769}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v91'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 3,
                  'num_cols': ['v111', 'v25', 'v32', 'v58'],
                  'num_folds': 5,
                  'random_state': 1050327537}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=352, **params)

        # Gene Normalized Importance: 0.017963
        # Transformed Feature Names and Importances: {'353_WoE:v107:v110:v125:v30:v31:v47:v56:v66:v79.0': 0.01796298660337925}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v110', 'v125', 'v30', 'v31', 'v47', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1645241354}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=353, **params)

        # Gene Normalized Importance: 0.039583
        # Transformed Feature Names and Importances: {'354_NumCatTE:v10:v50:v66:v90.0': 0.039582688361406326}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v10', 'v50', 'v90'],
                  'num_folds': 5,
                  'random_state': 702431895,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=354, **params)

        # Gene Normalized Importance: 0.027024
        # Transformed Feature Names and Importances: {'364_NumToCatWoE:v101:v124:v13:v18:v40:v41:v50.0': 0.027023574337363243}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 25,
                  'cv_type': 'KFold',
                  'num_cols': ['v101', 'v124', 'v13', 'v18', 'v40', 'v41', 'v50'],
                  'num_folds': 5,
                  'random_state': 1400390628}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=364, **params)

        # Gene Normalized Importance: 0.035048
        # Transformed Feature Names and Importances: {'365_CVCatNumEnc:v31:v56:v102.max': 0.017791923135519028, '365_CVCatNumEnc:v31:v56:v28.max': 0.017256179824471474}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v31', 'v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': None,
                  'num_cols': ['v102', 'v28'],
                  'num_folds': 5,
                  'random_state': 196446589}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=365, **params)

        # Gene Normalized Importance: 0.047522
        # Transformed Feature Names and Importances: {'370_ClusterDist2:v12.1': 0.034402672201395035, '370_ClusterDist2:v12.0': 0.013119776733219624}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 2,
                  'l2_norm': False,
                  'num_cols': ['v12'],
                  'random_state': 4275714180,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=370, **params)

        # Gene Normalized Importance: 0.041452
        # Transformed Feature Names and Importances: {'375_CVTE:v113:v30:v31:v66.0': 0.041451673954725266}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v30', 'v31', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 4007914313,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=375, **params)

        # Gene Normalized Importance: 0.093024
        # Transformed Feature Names and Importances: {'378_Freq:v112:v113:v22:v24:v31:v52:v56:v66:v91': 0.09302447736263275}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v112', 'v113', 'v22', 'v24', 'v31', 'v52', 'v56', 'v66', 'v91'],
                  'norm': False,
                  'random_state': 863290575}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=378, **params)

        # Gene Normalized Importance: 0.07153
        # Transformed Feature Names and Importances: {'380_CVCatNumEnc:v112:v125:v66:v50.sd': 0.0264765452593565, '380_CVCatNumEnc:v112:v125:v66:v82.sd': 0.01781059429049492, '380_CVCatNumEnc:v112:v125:v66:v10.sd': 0.013800399377942085, '380_CVCatNumEnc:v112:v125:v66:v99.sd': 0.013442402705550194}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v112', 'v125', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 100,
                  'num_cols': ['v10', 'v50', 'v82', 'v99'],
                  'num_folds': 5,
                  'random_state': 3410506128}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=380, **params)

        # Gene Normalized Importance: 0.067598
        # Transformed Feature Names and Importances: {'381_CVCatNumEnc:v113:v125:v47:v50.mean': 0.02370031550526619, '381_CVCatNumEnc:v113:v125:v47:v118.mean': 0.01594384014606476, '381_CVCatNumEnc:v113:v125:v47:v13.mean': 0.015139102935791016, '381_CVCatNumEnc:v113:v125:v47:v61.mean': 0.012814384885132313}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v125', 'v47'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 3,
                  'num_cols': ['v118', 'v13', 'v50', 'v61'],
                  'num_folds': 5,
                  'random_state': 2044670972}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=381, **params)

        # Gene Normalized Importance: 0.034129
        # Transformed Feature Names and Importances: {'383_TruncSVD:v101:v122:v4:v50:v51.2': 0.017386306077241898, '383_TruncSVD:v101:v122:v4:v50:v51.0': 0.016742784529924393, '383_TruncSVD:v101:v122:v4:v50:v51.1': 0.0}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v101', 'v122', 'v4', 'v50', 'v51'],
                  'random_state': 3999091515}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=383, **params)

        # Gene Normalized Importance: 0.075796
        # Transformed Feature Names and Importances: {'385_Freq:v107:v113:v22:v47:v52:v56:v71:v74:v79': 0.07579606771469116}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v107', 'v113', 'v22', 'v47', 'v52', 'v56', 'v71', 'v74', 'v79'],
                  'norm': True,
                  'random_state': 2487032508}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=385, **params)

        # Gene Normalized Importance: 0.069641
        # Transformed Feature Names and Importances: {'386_TruncSVD:v10:v104:v111:v114:v50.1': 0.02618131972849369, '386_TruncSVD:v10:v104:v111:v114:v50.0': 0.025926200672984123, '386_TruncSVD:v10:v104:v111:v114:v50.2': 0.017533719539642334}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v10', 'v104', 'v111', 'v114', 'v50'],
                  'random_state': 705792480}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=386, **params)

        # Gene Normalized Importance: 0.11361
        # Transformed Feature Names and Importances: {'387_NumToCatTE:v50.0': 0.11361328512430191}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 4254217220,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=387, **params)

        # Gene Normalized Importance:       1
        # Transformed Feature Names and Importances: {'388_CVTE:v24:v47:v56:v66:v79.0': 1.0}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v47', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1271334274,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=388, **params)

        # Gene Normalized Importance: 0.019109
        # Transformed Feature Names and Importances: {'391_Freq:v24:v30:v47:v66': 0.019108980894088745}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v24', 'v30', 'v47', 'v66'],
                  'norm': False,
                  'random_state': 2319181507}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=391, **params)

        # Gene Normalized Importance: 0.11545
        # Transformed Feature Names and Importances: {'393_ClusterDist8:v118:v12:v25:v37:v50:v59.3': 0.02336442843079567, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.6': 0.0194387249648571, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.2': 0.0182438176125288, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.7': 0.017821097746491432, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.5': 0.014660016633570194, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.4': 0.01214632485061884, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.0': 0.009773612953722477, '393_ClusterDist8:v118:v12:v25:v37:v50:v59.1': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v118', 'v12', 'v25', 'v37', 'v50', 'v59'],
                  'random_state': 3867489314,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=393, **params)

        # Gene Normalized Importance: 0.040861
        # Transformed Feature Names and Importances: {'394_WoE:v110:v125:v22:v24:v31:v56:v91.0': 0.040860991925001144}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v125', 'v22', 'v24', 'v31', 'v56', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2563333183}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=394, **params)

        # Gene Normalized Importance: 0.017687
        # Transformed Feature Names and Importances: {'400_CVTE:v113:v22:v24:v71:v79.0': 0.01768747717142105}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v22', 'v24', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 2559800778,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=400, **params)

        # Gene Normalized Importance: 0.016899
        # Transformed Feature Names and Importances: {'401_NumCatTE:v124:v47:v50:v66.0': 0.01689903810620308}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cat_cols': ['v47', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v124', 'v50'],
                  'num_folds': 5,
                  'random_state': 1126773347,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=401, **params)

        # Gene Normalized Importance: 0.016801
        # Transformed Feature Names and Importances: {'404_CVTE:v110:v113:v52:v79.0': 0.016801398247480392}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v110', 'v113', 'v52', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 3716125530,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=404, **params)

        # Gene Normalized Importance: 0.063546
        # Transformed Feature Names and Importances: {'416_CVCatNumEnc:v112:v113:v30:v66:v109.max': 0.017326300963759422, '416_CVCatNumEnc:v112:v113:v30:v66:v34.max': 0.01708458736538887, '416_CVCatNumEnc:v112:v113:v30:v66:v89.max': 0.01610000804066658, '416_CVCatNumEnc:v112:v113:v30:v66:v11.max': 0.01303479727357626}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v112', 'v113', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 3,
                  'num_cols': ['v109', 'v11', 'v34', 'v89'],
                  'num_folds': 5,
                  'random_state': 1875121544}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=416, **params)

        # Gene Normalized Importance: 0.19268
        # Transformed Feature Names and Importances: {'418_ClusterDist10:v50:v68:v99.0': 0.027437059208750725, '418_ClusterDist10:v50:v68:v99.7': 0.02249755524098873, '418_ClusterDist10:v50:v68:v99.3': 0.022368362173438072, '418_ClusterDist10:v50:v68:v99.8': 0.021312909200787544, '418_ClusterDist10:v50:v68:v99.5': 0.020239394158124924, '418_ClusterDist10:v50:v68:v99.1': 0.0195396076887846, '418_ClusterDist10:v50:v68:v99.6': 0.01866045407950878, '418_ClusterDist10:v50:v68:v99.4': 0.015829062089323997, '418_ClusterDist10:v50:v68:v99.2': 0.01467422116547823, '418_ClusterDist10:v50:v68:v99.9': 0.010118854232132435}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v50', 'v68', 'v99'],
                  'random_state': 3548772982,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=418, **params)

        # Gene Normalized Importance: 0.015067
        # Transformed Feature Names and Importances: {'419_Freq:v22:v24:v56:v66:v71': 0.015067460015416145}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v22', 'v24', 'v56', 'v66', 'v71'],
                  'norm': False,
                  'random_state': 3792148387}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=419, **params)

        # Gene Normalized Importance: 0.01056
        # Transformed Feature Names and Importances: {'421_NumToCatTE:v11:v114.0': 0.010560222901403904}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v11', 'v114'],
                  'num_folds': 5,
                  'random_state': 3977684961,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=421, **params)

        # Gene Normalized Importance: 0.017297
        # Transformed Feature Names and Importances: {'424_CVTE:v113:v56.0': 0.01729724183678627}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 2812823144,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=424, **params)

        # Gene Normalized Importance: 0.12433
        # Transformed Feature Names and Importances: {'425_ClusterDist10:v126:v131:v33:v35:v77:v82.6': 0.02489614114165306, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.1': 0.02135567180812359, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.0': 0.020705316215753555, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.5': 0.016020413488149643, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.9': 0.013413336127996445, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.2': 0.010572115890681744, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.3': 0.009775265119969845, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.8': 0.0075951977632939816, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.4': 0.0, '425_ClusterDist10:v126:v131:v33:v35:v77:v82.7': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v126', 'v131', 'v33', 'v35', 'v77', 'v82'],
                  'random_state': 4225270774,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=425, **params)

        # Gene Normalized Importance: 0.065776
        # Transformed Feature Names and Importances: {'427_CVCatNumEnc:v113:v30:v66:v21.min': 0.025385091081261635, '427_CVCatNumEnc:v113:v30:v66:v50.min': 0.021469173952937126, '427_CVCatNumEnc:v113:v30:v66:v16.min': 0.018921328708529472}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': None,
                  'num_cols': ['v16', 'v21', 'v50'],
                  'num_folds': 5,
                  'random_state': 3954118147}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=427, **params)

        # Gene Normalized Importance: 0.01568
        # Transformed Feature Names and Importances: {'442_NumToCatTE:v1:v100:v12:v122:v131:v34:v42:v9.0': 0.01567991077899933}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v1', 'v100', 'v12', 'v122', 'v131', 'v34', 'v42', 'v9'],
                  'num_folds': 5,
                  'random_state': 4083156280,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=442, **params)

        # Gene Normalized Importance: 0.021002
        # Transformed Feature Names and Importances: {'448_TruncSVD:v18:v27:v85.0': 0.02100176364183426, '448_TruncSVD:v18:v27:v85.1': 0.0}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2,
                  'num_cols': ['v18', 'v27', 'v85'],
                  'random_state': 3405495147}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=448, **params)

        # Gene Normalized Importance: 0.62926
        # Transformed Feature Names and Importances: {'450_CVTE:v24:v31:v56:v66:v71:v79.0': 0.6292574405670166}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v31', 'v56', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 3158382482,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=450, **params)

        # Gene Normalized Importance: 0.080587
        # Transformed Feature Names and Importances: {'457_NumToCatTE:v50:v73.0': 0.08058691769838333}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v50', 'v73'],
                  'num_folds': 5,
                  'random_state': 2686758504,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=457, **params)

        # Gene Normalized Importance: 0.020107
        # Transformed Feature Names and Importances: {'459_WoE:v112:v113:v30.0': 0.020107101649045944}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v112', 'v113', 'v30'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2368421886}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=459, **params)

        # Gene Normalized Importance: 0.036275
        # Transformed Feature Names and Importances: {'461_Freq:v110:v113:v22:v30:v47:v56:v66:v79': 0.03627476841211319}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v110', 'v113', 'v22', 'v30', 'v47', 'v56', 'v66', 'v79'],
                  'norm': False,
                  'random_state': 1573805183}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=461, **params)

        # Gene Normalized Importance: 0.017489
        # Transformed Feature Names and Importances: {'467_Freq:v107:v110:v30:v66:v79': 0.017488716170191765}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v107', 'v110', 'v30', 'v66', 'v79'],
                  'norm': True,
                  'random_state': 2527423740}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=467, **params)

        # Gene Normalized Importance: 0.065526
        # Transformed Feature Names and Importances: {'475_Freq:v110:v112:v22:v31:v52:v56:v66:v71:v79': 0.06552568823099136}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v110', 'v112', 'v22', 'v31', 'v52', 'v56', 'v66', 'v71', 'v79'],
                  'norm': False,
                  'random_state': 3601150761}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=475, **params)

        # Gene Normalized Importance: 0.083054
        # Transformed Feature Names and Importances: {'479_CVCatNumEnc:v30:v98.sd': 0.023843960836529732, '479_CVCatNumEnc:v30:v16.sd': 0.02291899174451828, '479_CVCatNumEnc:v30:v50.sd': 0.020185908302664757, '479_CVCatNumEnc:v30:v11.sd': 0.01610497012734413}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v30'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v11', 'v16', 'v50', 'v98'],
                  'num_folds': 5,
                  'random_state': 2282247170}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=479, **params)

        # Gene Normalized Importance: 0.014108
        # Transformed Feature Names and Importances: {'486_WoE:v22:v24.0': 0.014107661321759224}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v24'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2102971242}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=486, **params)

        # Gene Normalized Importance: 0.017695
        # Transformed Feature Names and Importances: {'489_NumCatTE:v117:v125:v50:v66:v72.0': 0.017695261165499687}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v125', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v117', 'v50', 'v72'],
                  'num_folds': 5,
                  'random_state': 2515340361,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=489, **params)

        # Gene Normalized Importance: 0.022878
        # Transformed Feature Names and Importances: {'491_WoE:v112:v125:v31:v56:v66:v79.0': 0.022878166288137436}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v112', 'v125', 'v31', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 289357144}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=491, **params)

        # Gene Normalized Importance: 0.13646
        # Transformed Feature Names and Importances: {'492_ClusterDist6:v21:v50.4': 0.04032319784164429, '492_ClusterDist6:v21:v50.2': 0.03175413981080055, '492_ClusterDist6:v21:v50.1': 0.01745227910578251, '492_ClusterDist6:v21:v50.3': 0.01701568067073822, '492_ClusterDist6:v21:v50.0': 0.015492226928472519, '492_ClusterDist6:v21:v50.5': 0.014421343803405762}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v21', 'v50'],
                  'random_state': 3183262952,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=492, **params)

        # Gene Normalized Importance: 0.022655
        # Transformed Feature Names and Importances: {'493_NumCatTE:v107:v123:v21:v40:v66:v78.0': 0.02265450544655323}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v107', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v123', 'v21', 'v40', 'v78'],
                  'num_folds': 5,
                  'random_state': 3353685512,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=493, **params)

        # Gene Normalized Importance: 0.038731
        # Transformed Feature Names and Importances: {'495_ClusterDist2:v104:v106:v16:v17:v43:v49:v50:v86:v87.0': 0.02085416577756405, '495_ClusterDist2:v104:v106:v16:v17:v43:v49:v50:v86:v87.1': 0.01787731796503067}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 2,
                  'l2_norm': False,
                  'num_cols': ['v104', 'v106', 'v16', 'v17', 'v43', 'v49', 'v50', 'v86', 'v87'],
                  'random_state': 3057909140,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=495, **params)

        # Gene Normalized Importance: 0.04606
        # Transformed Feature Names and Importances: {'503_CVCatNumEnc:v113:v30:v66:v89.min': 0.026836231350898743, '503_CVCatNumEnc:v113:v30:v66:v44.min': 0.01922415755689144}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 10,
                  'num_cols': ['v44', 'v89'],
                  'num_folds': 5,
                  'random_state': 4068876578}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=503, **params)

        # Gene Normalized Importance: 0.12504
        # Transformed Feature Names and Importances: {'504_ClusterDist8:v21:v27.4': 0.02277710661292076, '504_ClusterDist8:v21:v27.6': 0.01706945337355137, '504_ClusterDist8:v21:v27.2': 0.01682450622320175, '504_ClusterDist8:v21:v27.0': 0.015820084139704704, '504_ClusterDist8:v21:v27.1': 0.01426332350820303, '504_ClusterDist8:v21:v27.3': 0.01278184074908495, '504_ClusterDist8:v21:v27.7': 0.012766045518219471, '504_ClusterDist8:v21:v27.5': 0.012736434116959572}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v21', 'v27'],
                  'random_state': 102802403,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=504, **params)

        # Gene Normalized Importance:  0.0169
        # Transformed Feature Names and Importances: {'508_NumCatTE:v125:v13:v32.0': 0.016899550333619118}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v125'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v13', 'v32'],
                  'num_folds': 5,
                  'random_state': 1955268019,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=508, **params)

        # Gene Normalized Importance: 0.022402
        # Transformed Feature Names and Importances: {'510_NumCatTE:v113:v30:v50:v56:v79:v84.0': 0.02240239828824997}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v113', 'v30', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v50', 'v84'],
                  'num_folds': 5,
                  'random_state': 1582829037,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=510, **params)

        # Gene Normalized Importance: 0.020983
        # Transformed Feature Names and Importances: {'514_NumCatTE:v50:v56:v66.0': 0.020983276888728142}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cat_cols': ['v56', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 319028700,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=514, **params)

        # Gene Normalized Importance: 0.016908
        # Transformed Feature Names and Importances: {'518_NumCatTE:v110:v21:v3:v50:v56.0': 0.01690845377743244}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v110', 'v3', 'v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v21', 'v50'],
                  'num_folds': 5,
                  'random_state': 2274972408,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=518, **params)

        # Gene Normalized Importance: 0.024336
        # Transformed Feature Names and Importances: {'520_TruncSVD:v40:v64:v82.0': 0.024335747584700584}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 1,
                  'num_cols': ['v40', 'v64', 'v82'],
                  'random_state': 4033633137}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=520, **params)

        # Gene Normalized Importance: 0.018718
        # Transformed Feature Names and Importances: {'523_WoE:v24:v47:v52:v56:v66:v71:v79.0': 0.018717655912041664}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v24', 'v47', 'v52', 'v56', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2938467229}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=523, **params)

        # Gene Normalized Importance: 0.019304
        # Transformed Feature Names and Importances: {'525_NumToCatTE:v10:v102:v114:v23:v45:v50:v6.0': 0.019304074347019196}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v10', 'v102', 'v114', 'v23', 'v45', 'v50', 'v6'],
                  'num_folds': 5,
                  'random_state': 2003523510,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=525, **params)

        # Gene Normalized Importance: 0.06507
        # Transformed Feature Names and Importances: {'528_TruncSVD:v10:v128:v34:v35:v70:v85:v90.2': 0.02849869802594185, '528_TruncSVD:v10:v128:v34:v35:v70:v85:v90.1': 0.020514143630862236, '528_TruncSVD:v10:v128:v34:v35:v70:v85:v90.0': 0.016056876629590988}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v10', 'v128', 'v34', 'v35', 'v70', 'v85', 'v90'],
                  'random_state': 204345952}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=528, **params)

        # Gene Normalized Importance: 0.015775
        # Transformed Feature Names and Importances: {'534_TruncSVD:v104:v116:v19:v21:v50:v67:v8:v98.0': 0.01577533595263958}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 1,
                  'num_cols': ['v104', 'v116', 'v19', 'v21', 'v50', 'v67', 'v8', 'v98'],
                  'random_state': 4095501342}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=534, **params)

        # Gene Normalized Importance: 0.018548
        # Transformed Feature Names and Importances: {'535_TruncSVD:v40:v50:v65:v94.0': 0.018548322841525078}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 1,
                  'num_cols': ['v40', 'v50', 'v65', 'v94'],
                  'random_state': 1023921442}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=535, **params)

        # Gene Normalized Importance: 0.03233
        # Transformed Feature Names and Importances: {'545_WoE:v113:v30:v66.0': 0.03233009949326515}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1195734113}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=545, **params)

        # Gene Normalized Importance: 0.11803
        # Transformed Feature Names and Importances: {'546_WoE:v113:v24:v31:v56:v66.0': 0.11802566796541214}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v24', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1154193699}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=546, **params)

        # Gene Normalized Importance: 0.023501
        # Transformed Feature Names and Importances: {'548_WoE:v125:v24:v30:v31:v52:v66:v79.0': 0.023501340299844742}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v125', 'v24', 'v30', 'v31', 'v52', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4110861016}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=548, **params)

        # Gene Normalized Importance: 0.073437
        # Transformed Feature Names and Importances: {'554_TruncSVD:v12:v127:v42:v50:v70.2': 0.0596759058535099, '554_TruncSVD:v12:v127:v42:v50:v70.0': 0.013761450536549091, '554_TruncSVD:v12:v127:v42:v50:v70.1': 0.0}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v12', 'v127', 'v42', 'v50', 'v70'],
                  'random_state': 2200134430}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=554, **params)

        # Gene Normalized Importance: 0.18037
        # Transformed Feature Names and Importances: {'559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.4': 0.023238888010382652, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.2': 0.022454863414168358, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.0': 0.021572431549429893, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.5': 0.021463114768266678, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.1': 0.021327795460820198, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.7': 0.01963791996240616, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.3': 0.017809981480240822, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.6': 0.013575260527431965, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.8': 0.011151731945574284, '559_ClusterDist10:v114:v124:v34:v39:v44:v50:v58:v86:v90.9': 0.008137938566505909}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v114', 'v124', 'v34', 'v39', 'v44', 'v50', 'v58', 'v86', 'v90'],
                  'random_state': 935968608,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=559, **params)

        # Gene Normalized Importance: 0.052995
        # Transformed Feature Names and Importances: {'561_Freq:v110:v113:v125:v22:v30:v31:v56:v66:v91': 0.05299513041973114}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v110', 'v113', 'v125', 'v22', 'v30', 'v31', 'v56', 'v66', 'v91'],
                  'norm': False,
                  'random_state': 3791184121}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=561, **params)

        # Gene Normalized Importance: 0.13422
        # Transformed Feature Names and Importances: {'569_ClusterDist8:v16:v21:v32:v50:v70.2': 0.02062743529677391, '569_ClusterDist8:v16:v21:v32:v50:v70.3': 0.02043064497411251, '569_ClusterDist8:v16:v21:v32:v50:v70.1': 0.020224254578351974, '569_ClusterDist8:v16:v21:v32:v50:v70.7': 0.01826944202184677, '569_ClusterDist8:v16:v21:v32:v50:v70.0': 0.015227853320538998, '569_ClusterDist8:v16:v21:v32:v50:v70.5': 0.014026460237801075, '569_ClusterDist8:v16:v21:v32:v50:v70.6': 0.01383441686630249, '569_ClusterDist8:v16:v21:v32:v50:v70.4': 0.011582392267882824}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v16', 'v21', 'v32', 'v50', 'v70'],
                  'random_state': 235125998,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=569, **params)

        # Gene Normalized Importance: 0.032501
        # Transformed Feature Names and Importances: {'572_TruncSVD:v111:v114:v12:v13:v14:v28:v50:v77.1': 0.02005184069275856, '572_TruncSVD:v111:v114:v12:v13:v14:v28:v50:v77.0': 0.012449387460947037}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2,
                  'num_cols': ['v111', 'v114', 'v12', 'v13', 'v14', 'v28', 'v50', 'v77'],
                  'random_state': 3479296197}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=572, **params)

        # Gene Normalized Importance: 0.015605
        # Transformed Feature Names and Importances: {'581_NumCatTE:v119:v16:v19:v24:v31:v50:v66.0': 0.015604835934937}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v24', 'v31', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v119', 'v16', 'v19', 'v50'],
                  'num_folds': 5,
                  'random_state': 175603799,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=581, **params)

        # Gene Normalized Importance: 0.13775
        # Transformed Feature Names and Importances: {'586_ClusterDist8:v102:v34:v59.5': 0.02329755388200283, '586_ClusterDist8:v102:v34:v59.4': 0.021680762991309166, '586_ClusterDist8:v102:v34:v59.6': 0.01773257553577423, '586_ClusterDist8:v102:v34:v59.0': 0.017501303926110268, '586_ClusterDist8:v102:v34:v59.2': 0.016111275181174278, '586_ClusterDist8:v102:v34:v59.7': 0.014649617485702038, '586_ClusterDist8:v102:v34:v59.3': 0.013711691834032536, '586_ClusterDist8:v102:v34:v59.1': 0.013069634325802326}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v102', 'v34', 'v59'],
                  'random_state': 1301295625,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=586, **params)

        # Gene Normalized Importance: 0.049485
        # Transformed Feature Names and Importances: {'590_WoE:v113:v125:v22:v24:v66.0': 0.049485474824905396}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v125', 'v22', 'v24', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3267221717}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=590, **params)

        # Gene Normalized Importance: 0.07755
        # Transformed Feature Names and Importances: {'591_CVCatNumEnc:v56:v66:v127.sd': 0.023119909688830376, '591_CVCatNumEnc:v56:v66:v10.sd': 0.02108137495815754, '591_CVCatNumEnc:v56:v66:v97.sd': 0.017345305532217026, '591_CVCatNumEnc:v56:v66:v102.sd': 0.01600348763167858}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v10', 'v102', 'v127', 'v97'],
                  'num_folds': 5,
                  'random_state': 1769630606}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=591, **params)

        # Gene Normalized Importance: 0.02199
        # Transformed Feature Names and Importances: {'599_WoE:v125:v22:v79.0': 0.021990269422531128}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v125', 'v22', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4269108108}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=599, **params)

        # Gene Normalized Importance: 0.12418
        # Transformed Feature Names and Importances: {'602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.0': 0.02486330270767212, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.3': 0.016627727076411247, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.2': 0.015627630054950714, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.5': 0.015508941374719143, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.4': 0.015430852770805359, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.7': 0.014924164861440659, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.1': 0.013063968159258366, '602_ClusterDist8:v105:v131:v16:v29:v40:v43:v61:v69:v90.6': 0.00813014805316925}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v105', 'v131', 'v16', 'v29', 'v40', 'v43', 'v61', 'v69', 'v90'],
                  'random_state': 2044073157,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=602, **params)

        # Gene Normalized Importance: 0.061282
        # Transformed Feature Names and Importances: {'607_TruncSVD:v121:v34:v50:v59:v6:v93.1': 0.02980097383260727, '607_TruncSVD:v121:v34:v50:v59:v6:v93.0': 0.017349032685160637, '607_TruncSVD:v121:v34:v50:v59:v6:v93.2': 0.014131753705441952}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v121', 'v34', 'v50', 'v59', 'v6', 'v93'],
                  'random_state': 2755184082}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=607, **params)

        # Gene Normalized Importance: 0.042811
        # Transformed Feature Names and Importances: {'611_WoE:v113:v125:v22:v31:v56:v66:v71:v79.0': 0.04281143844127655}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v125', 'v22', 'v31', 'v56', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3518782475}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=611, **params)

        # Gene Normalized Importance: 0.021089
        # Transformed Feature Names and Importances: {'614_NumToCatWoE:v19:v40:v43:v50:v99.0': 0.021088913083076477}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 25,
                  'cv_type': 'KFold',
                  'num_cols': ['v19', 'v40', 'v43', 'v50', 'v99'],
                  'num_folds': 5,
                  'random_state': 384431846}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=614, **params)

        # Gene Normalized Importance: 0.15869
        # Transformed Feature Names and Importances: {'615_ClusterDist10:v120:v126:v130:v2:v50.6': 0.03179388865828514, '615_ClusterDist10:v120:v126:v130:v2:v50.1': 0.01818767748773098, '615_ClusterDist10:v120:v126:v130:v2:v50.2': 0.01700330711901188, '615_ClusterDist10:v120:v126:v130:v2:v50.7': 0.016755012795329094, '615_ClusterDist10:v120:v126:v130:v2:v50.0': 0.016298165544867516, '615_ClusterDist10:v120:v126:v130:v2:v50.3': 0.0147621538490057, '615_ClusterDist10:v120:v126:v130:v2:v50.5': 0.014338942244648933, '615_ClusterDist10:v120:v126:v130:v2:v50.4': 0.011877079494297504, '615_ClusterDist10:v120:v126:v130:v2:v50.9': 0.009222157299518585, '615_ClusterDist10:v120:v126:v130:v2:v50.8': 0.008455775678157806}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v120', 'v126', 'v130', 'v2', 'v50'],
                  'random_state': 4014654098,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=615, **params)

        # Gene Normalized Importance: 0.087514
        # Transformed Feature Names and Importances: {'620_CVCatNumEnc:v31:v66:v80.max': 0.03627118840813637, '620_CVCatNumEnc:v31:v66:v50.max': 0.030152933672070503, '620_CVCatNumEnc:v31:v66:v32.max': 0.011724293231964111, '620_CVCatNumEnc:v31:v66:v2.max': 0.009365146048367023}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v31', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 1,
                  'num_cols': ['v2', 'v32', 'v50', 'v80'],
                  'num_folds': 5,
                  'random_state': 3030225228}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=620, **params)

        # Gene Normalized Importance: 0.018004
        # Transformed Feature Names and Importances: {'622_WoE:v113:v24:v31:v52:v66.0': 0.018003853037953377}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v24', 'v31', 'v52', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1608392247}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=622, **params)

        # Gene Normalized Importance: 0.13567
        # Transformed Feature Names and Importances: {'623_ClusterDist8:v12:v21:v33:v50.1': 0.02332484908401966, '623_ClusterDist8:v12:v21:v33:v50.3': 0.022925639525055885, '623_ClusterDist8:v12:v21:v33:v50.2': 0.019618242979049683, '623_ClusterDist8:v12:v21:v33:v50.6': 0.017966648563742638, '623_ClusterDist8:v12:v21:v33:v50.5': 0.01629006117582321, '623_ClusterDist8:v12:v21:v33:v50.0': 0.014387223869562149, '623_ClusterDist8:v12:v21:v33:v50.4': 0.011144168674945831, '623_ClusterDist8:v12:v21:v33:v50.7': 0.010017410852015018}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v12', 'v21', 'v33', 'v50'],
                  'random_state': 2159257339,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=623, **params)

        # Gene Normalized Importance: 0.061295
        # Transformed Feature Names and Importances: {'624_CVCatNumEnc:v52:v56:v79:v18.mean': 0.016667114570736885, '624_CVCatNumEnc:v52:v56:v79:v27.mean': 0.015942096710205078, '624_CVCatNumEnc:v52:v56:v79:v11.mean': 0.015207638032734394, '624_CVCatNumEnc:v52:v56:v79:v127.mean': 0.01347784511744976}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v52', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 1,
                  'num_cols': ['v11', 'v127', 'v18', 'v27'],
                  'num_folds': 5,
                  'random_state': 291612794}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=624, **params)

        # Gene Normalized Importance: 0.023434
        # Transformed Feature Names and Importances: {'629_NumCatTE:v113:v3:v32:v66:v79.0': 0.023434367030858994}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v113', 'v3', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v32'],
                  'num_folds': 5,
                  'random_state': 3457602219,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=629, **params)

        # Gene Normalized Importance: 0.027943
        # Transformed Feature Names and Importances: {'634_CVTE:v113:v66.0': 0.027943488210439682}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1969128459,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=634, **params)

        # Gene Normalized Importance: 0.062499
        # Transformed Feature Names and Importances: {'635_CVCatNumEnc:v112:v52:v56:v66:v45.count': 0.019288159906864166, '635_CVCatNumEnc:v112:v52:v56:v66:v60.count': 0.016367025673389435, '635_CVCatNumEnc:v112:v52:v56:v66:v123.count': 0.015439193695783615, '635_CVCatNumEnc:v112:v52:v56:v66:v106.count': 0.011404909193515778}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v112', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 3,
                  'num_cols': ['v106', 'v123', 'v45', 'v60'],
                  'num_folds': 5,
                  'random_state': 1513256659}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=635, **params)

        # Gene Normalized Importance: 0.058646
        # Transformed Feature Names and Importances: {'644_NumCatTE:v100:v113:v125:v129:v40:v52:v66:v82.0': 0.05864563584327698}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v113', 'v125', 'v52', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v100', 'v129', 'v40', 'v82'],
                  'num_folds': 5,
                  'random_state': 3903144783,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=644, **params)

        # Gene Normalized Importance: 0.018363
        # Transformed Feature Names and Importances: {'646_NumToCatTE:v39:v41:v67:v72:v92.0': 0.018362993374466896}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v39', 'v41', 'v67', 'v72', 'v92'],
                  'num_folds': 5,
                  'random_state': 4029075,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=646, **params)

        # Gene Normalized Importance: 0.033611
        # Transformed Feature Names and Importances: {'650_ClusterDist2:v19:v40:v50:v59:v61.0': 0.017519908025860786, '650_ClusterDist2:v19:v40:v50:v59:v61.1': 0.01609097234904766}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 2,
                  'l2_norm': False,
                  'num_cols': ['v19', 'v40', 'v50', 'v59', 'v61'],
                  'random_state': 3907547422,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=650, **params)

        # Gene Normalized Importance: 0.016013
        # Transformed Feature Names and Importances: {'652_NumToCatWoE:v118:v12:v126:v36:v49:v50:v68:v82:v95.0': 0.01601300947368145}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 100,
                  'cv_type': 'KFold',
                  'num_cols': ['v118', 'v12', 'v126', 'v36', 'v49', 'v50', 'v68', 'v82', 'v95'],
                  'num_folds': 5,
                  'random_state': 1406817720}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=652, **params)

        # Gene Normalized Importance: 0.030533
        # Transformed Feature Names and Importances: {'655_CVTE:v113:v22:v24:v79:v91.0': 0.030533291399478912}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v22', 'v24', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 552025228,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=655, **params)

        # Gene Normalized Importance: 0.018144
        # Transformed Feature Names and Importances: {'659_NumToCatWoE:v28:v50:v83:v98.0': 0.01814381778240204}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 250,
                  'cv_type': 'KFold',
                  'num_cols': ['v28', 'v50', 'v83', 'v98'],
                  'num_folds': 5,
                  'random_state': 905666561}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=659, **params)

        # Gene Normalized Importance: 0.039258
        # Transformed Feature Names and Importances: {'661_WoE:v56:v66:v71.0': 0.03925846889615059}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v56', 'v66', 'v71'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1869250991}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=661, **params)

        # Gene Normalized Importance: 0.048529
        # Transformed Feature Names and Importances: {'663_CVCatNumEnc:v112:v47:v56:v66:v100.max': 0.018752725794911385, '663_CVCatNumEnc:v112:v47:v56:v66:v27.max': 0.01597166620194912, '663_CVCatNumEnc:v112:v47:v56:v66:v106.max': 0.013804685324430466}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v112', 'v47', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 3,
                  'num_cols': ['v100', 'v106', 'v27'],
                  'num_folds': 5,
                  'random_state': 659119539}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=663, **params)

        # Gene Normalized Importance: 0.020042
        # Transformed Feature Names and Importances: {'664_NumToCatTE:v131:v34:v50.0': 0.02004154399037361}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v131', 'v34', 'v50'],
                  'num_folds': 5,
                  'random_state': 3580845856,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=664, **params)

        # Gene Normalized Importance: 0.14129
        # Transformed Feature Names and Importances: {'671_ClusterDist8:v124:v14:v82.7': 0.021116206422448158, '671_ClusterDist8:v124:v14:v82.0': 0.02080732397735119, '671_ClusterDist8:v124:v14:v82.2': 0.020800091326236725, '671_ClusterDist8:v124:v14:v82.5': 0.018396148458123207, '671_ClusterDist8:v124:v14:v82.4': 0.01598677597939968, '671_ClusterDist8:v124:v14:v82.6': 0.015951376408338547, '671_ClusterDist8:v124:v14:v82.1': 0.014875492081046104, '671_ClusterDist8:v124:v14:v82.3': 0.013357896357774734}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v124', 'v14', 'v82'],
                  'random_state': 2393122815,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=671, **params)

        # Gene Normalized Importance: 0.070998
        # Transformed Feature Names and Importances: {'674_CVCatNumEnc:v113:v52:v56:v66:v34.min': 0.02286519855260849, '674_CVCatNumEnc:v113:v52:v56:v66:v68.min': 0.017346687614917755, '674_CVCatNumEnc:v113:v52:v56:v66:v50.min': 0.015522271394729614, '674_CVCatNumEnc:v113:v52:v56:v66:v114.min': 0.015264084562659264}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 1,
                  'num_cols': ['v114', 'v34', 'v50', 'v68'],
                  'num_folds': 5,
                  'random_state': 1104010041}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=674, **params)

        # Gene Normalized Importance: 0.025768
        # Transformed Feature Names and Importances: {'675_TruncSVD:v10:v12.0': 0.025767667219042778}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2, 'num_cols': ['v10', 'v12'], 'random_state': 937391328}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=675, **params)

        # Gene Normalized Importance: 0.040846
        # Transformed Feature Names and Importances: {'679_CVCatNumEnc:v113:v66:v85.mean': 0.02131354622542858, '679_CVCatNumEnc:v113:v66:v103.mean': 0.01953219249844551}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 3,
                  'num_cols': ['v103', 'v85'],
                  'num_folds': 5,
                  'random_state': 1774417382}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=679, **params)

        # Gene Normalized Importance: 0.063273
        # Transformed Feature Names and Importances: {'680_TruncSVD:v12:v131:v40:v50:v55:v82:v89.0': 0.022414207458496094, '680_TruncSVD:v12:v131:v40:v50:v55:v82:v89.1': 0.02229568175971508, '680_TruncSVD:v12:v131:v40:v50:v55:v82:v89.2': 0.018562909215688705}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v12', 'v131', 'v40', 'v50', 'v55', 'v82', 'v89'],
                  'random_state': 4077517426}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=680, **params)

        # Gene Normalized Importance: 0.082383
        # Transformed Feature Names and Importances: {'687_CVCatNumEnc:v24:v31:v47:v79:v123.mean': 0.029964886605739594, '687_CVCatNumEnc:v24:v31:v47:v79:v84.mean': 0.018254710361361504, '687_CVCatNumEnc:v24:v31:v47:v79:v12.mean': 0.01809181086719036, '687_CVCatNumEnc:v24:v31:v47:v79:v44.mean': 0.016071846708655357}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v24', 'v31', 'v47', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 100,
                  'num_cols': ['v12', 'v123', 'v44', 'v84'],
                  'num_folds': 5,
                  'random_state': 3254307455}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=687, **params)

        # Gene Normalized Importance: 0.073289
        # Transformed Feature Names and Importances: {'688_ClusterDist6:v42:v49:v50.0': 0.01813070848584175, '688_ClusterDist6:v42:v49:v50.3': 0.01595216430723667, '688_ClusterDist6:v42:v49:v50.2': 0.01559289451688528, '688_ClusterDist6:v42:v49:v50.4': 0.015510602854192257, '688_ClusterDist6:v42:v49:v50.1': 0.008103128522634506, '688_ClusterDist6:v42:v49:v50.5': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v42', 'v49', 'v50'],
                  'random_state': 804440490,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=688, **params)

        # Gene Normalized Importance: 0.030272
        # Transformed Feature Names and Importances: {'693_TruncSVD:v43:v45:v50.1': 0.015249021351337433, '693_TruncSVD:v43:v45:v50.0': 0.015022953040897846}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v43', 'v45', 'v50'],
                  'random_state': 2800971170}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=693, **params)

        # Gene Normalized Importance: 0.017575
        # Transformed Feature Names and Importances: {'695_WoE:v22:v24:v31:v56:v66.0': 0.01757536455988884}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v24', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1734000083}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=695, **params)

        # Gene Normalized Importance: 0.020709
        # Transformed Feature Names and Importances: {'697_CVCatNumEnc:v47:v56:v71:v79:v61.sd': 0.020709415897727013}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v47', 'v56', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v61'],
                  'num_folds': 5,
                  'random_state': 566926902}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=697, **params)

        # Gene Normalized Importance: 0.018669
        # Transformed Feature Names and Importances: {'703_CVTE:v125:v24:v30:v31:v52:v56.0': 0.01866890862584114}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v125', 'v24', 'v30', 'v31', 'v52', 'v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1045235033,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=703, **params)

        # Gene Normalized Importance: 0.022976
        # Transformed Feature Names and Importances: {'704_CVTE:v125:v31:v47:v56:v66:v79.0': 0.022976422682404518}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v125', 'v31', 'v47', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 755182588,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=704, **params)

        # Gene Normalized Importance: 0.076714
        # Transformed Feature Names and Importances: {'706_WoE:v24:v30:v31:v66:v79.0': 0.07671447843313217}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v24', 'v30', 'v31', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 964032844}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=706, **params)

        # Gene Normalized Importance: 0.083501
        # Transformed Feature Names and Importances: {'708_CVCatNumEnc:v56:v50.sd': 0.02742043510079384, '708_CVCatNumEnc:v56:v122.sd': 0.022408051416277885, '708_CVCatNumEnc:v56:v123.sd': 0.018699049949645996, '708_CVCatNumEnc:v56:v65.sd': 0.014973312616348267}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v122', 'v123', 'v50', 'v65'],
                  'num_folds': 5,
                  'random_state': 1349004906}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=708, **params)

        # Gene Normalized Importance: 0.030757
        # Transformed Feature Names and Importances: {'710_NumToCatTE:v34.0': 0.03075658343732357}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v34'],
                  'num_folds': 5,
                  'random_state': 634454169,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=710, **params)

        # Gene Normalized Importance: 0.035404
        # Transformed Feature Names and Importances: {'714_NumCatTE:v21:v22:v30:v31:v45:v75:v93.0': 0.03540414944291115}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v22', 'v30', 'v31', 'v75'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v21', 'v45', 'v93'],
                  'num_folds': 5,
                  'random_state': 1051230701,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=714, **params)

        # Gene Normalized Importance: 0.23359
        # Transformed Feature Names and Importances: {'715_NumCatTE:v50:v66.0': 0.23359473049640656}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 2908233766,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=715, **params)

        # Gene Normalized Importance: 0.018336
        # Transformed Feature Names and Importances: {'718_WoE:v56:v71:v79.0': 0.018336324021220207}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v56', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2732293990}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=718, **params)

        # Gene Normalized Importance: 0.064596
        # Transformed Feature Names and Importances: {'722_ClusterDist4:v119:v12:v129:v21:v34:v50:v68.2': 0.01846032217144966, '722_ClusterDist4:v119:v12:v129:v21:v34:v50:v68.0': 0.01772102527320385, '722_ClusterDist4:v119:v12:v129:v21:v34:v50:v68.1': 0.01494911964982748, '722_ClusterDist4:v119:v12:v129:v21:v34:v50:v68.3': 0.01346519123762846}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v119', 'v12', 'v129', 'v21', 'v34', 'v50', 'v68'],
                  'random_state': 3679920336,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=722, **params)

        # Gene Normalized Importance: 0.14208
        # Transformed Feature Names and Importances: {'732_NumCatTE:v50:v56.0': 0.14207608997821808}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 1494502765,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=732, **params)

        # Gene Normalized Importance: 0.068544
        # Transformed Feature Names and Importances: {'735_CVCatNumEnc:v110:v113:v125:v66:v50.min': 0.022244760766625404, '735_CVCatNumEnc:v110:v113:v125:v66:v126.min': 0.017083201557397842, '735_CVCatNumEnc:v110:v113:v125:v66:v12.min': 0.014798163436353207, '735_CVCatNumEnc:v110:v113:v125:v66:v21.min': 0.014417883940041065}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v110', 'v113', 'v125', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': None,
                  'num_cols': ['v12', 'v126', 'v21', 'v50'],
                  'num_folds': 5,
                  'random_state': 2181952918}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=735, **params)

        # Gene Normalized Importance: 0.19531
        # Transformed Feature Names and Importances: {'741_ClusterDist8:v12:v50.2': 0.06650237739086151, '741_ClusterDist8:v12:v50.7': 0.03273208439350128, '741_ClusterDist8:v12:v50.4': 0.0193592831492424, '741_ClusterDist8:v12:v50.5': 0.018597936257719994, '741_ClusterDist8:v12:v50.0': 0.017737993970513344, '741_ClusterDist8:v12:v50.3': 0.01609487645328045, '741_ClusterDist8:v12:v50.1': 0.01341339573264122, '741_ClusterDist8:v12:v50.6': 0.01087682880461216}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v12', 'v50'],
                  'random_state': 2393322044,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=741, **params)

        # Gene Normalized Importance: 0.064942
        # Transformed Feature Names and Importances: {'743_CVCatNumEnc:v110:v112:v31:v66:v111.count': 0.01981450989842415, '743_CVCatNumEnc:v110:v112:v31:v66:v116.count': 0.017189351841807365, '743_CVCatNumEnc:v110:v112:v31:v66:v99.count': 0.016731588169932365, '743_CVCatNumEnc:v110:v112:v31:v66:v124.count': 0.011206572875380516}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v110', 'v112', 'v31', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 1,
                  'num_cols': ['v111', 'v116', 'v124', 'v99'],
                  'num_folds': 5,
                  'random_state': 831431342}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=743, **params)

        # Gene Normalized Importance: 0.018128
        # Transformed Feature Names and Importances: {'750_NumCatTE:v105:v125:v130:v131.0': 0.0181276872754097}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v125'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v105', 'v130', 'v131'],
                  'num_folds': 5,
                  'random_state': 3125194521,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=750, **params)

        # Gene Normalized Importance: 0.015978
        # Transformed Feature Names and Importances: {'751_WoE:v24:v30:v75:v91.0': 0.015978019684553146}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v24', 'v30', 'v75', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1532629482}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=751, **params)

        # Gene Normalized Importance: 0.15418
        # Transformed Feature Names and Importances: {'752_ClusterDist10:v16:v36:v40.7': 0.020184192806482315, '752_ClusterDist10:v16:v36:v40.8': 0.019130131229758263, '752_ClusterDist10:v16:v36:v40.3': 0.017338786274194717, '752_ClusterDist10:v16:v36:v40.0': 0.017026593908667564, '752_ClusterDist10:v16:v36:v40.1': 0.016742374747991562, '752_ClusterDist10:v16:v36:v40.6': 0.01659044809639454, '752_ClusterDist10:v16:v36:v40.4': 0.014589810743927956, '752_ClusterDist10:v16:v36:v40.2': 0.01456304732710123, '752_ClusterDist10:v16:v36:v40.5': 0.011087910272181034, '752_ClusterDist10:v16:v36:v40.9': 0.006926186848431826}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v16', 'v36', 'v40'],
                  'random_state': 475935664,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=752, **params)

        # Gene Normalized Importance: 0.13682
        # Transformed Feature Names and Importances: {'753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.7': 0.022312099114060402, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.5': 0.021339965984225273, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.3': 0.018554121255874634, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.6': 0.017294885590672493, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.1': 0.01680687628686428, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.8': 0.015744812786579132, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.0': 0.013840524479746819, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.9': 0.010930591262876987, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.2': 0.0, '753_ClusterDist10:v1:v12:v128:v131:v17:v23:v34:v50:v54.4': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v1', 'v12', 'v128', 'v131', 'v17', 'v23', 'v34', 'v50', 'v54'],
                  'random_state': 1243789541,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=753, **params)

        # Gene Normalized Importance:  0.3571
        # Transformed Feature Names and Importances: {'760_WoE:v110:v24:v30:v31:v47:v56:v66.0': 0.35709822177886963}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v24', 'v30', 'v31', 'v47', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4022008756}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=760, **params)

        # Gene Normalized Importance: 0.051834
        # Transformed Feature Names and Importances: {'767_NumCatTE:v112:v2:v36:v57:v71:v79:v80.0': 0.051834434270858765}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v112', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v2', 'v36', 'v57', 'v80'],
                  'num_folds': 5,
                  'random_state': 3557306157,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=767, **params)

        # Gene Normalized Importance: 0.02737
        # Transformed Feature Names and Importances: {'776_NumCatTE:v127:v40:v50:v52:v66:v76.0': 0.02736966870725155}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v52', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v127', 'v40', 'v50', 'v76'],
                  'num_folds': 5,
                  'random_state': 3618459436,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=776, **params)

        # Gene Normalized Importance: 0.078459
        # Transformed Feature Names and Importances: {'778_ClusterDist8:v26:v40:v50:v55:v8:v84.7': 0.02098727971315384, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.4': 0.01774834282696247, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.2': 0.014856565743684769, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.5': 0.014600038528442383, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.1': 0.010266986675560474, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.0': 0.0, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.3': 0.0, '778_ClusterDist8:v26:v40:v50:v55:v8:v84.6': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v26', 'v40', 'v50', 'v55', 'v8', 'v84'],
                  'random_state': 1626469126,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=778, **params)

        # Gene Normalized Importance:  0.1436
        # Transformed Feature Names and Importances: {'779_WoE:v110:v22:v31:v52:v66:v91.0': 0.14360426366329193}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v22', 'v31', 'v52', 'v66', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 569080989}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=779, **params)

        # Gene Normalized Importance: 0.14156
        # Transformed Feature Names and Importances: {'789_ClusterDist8:v10:v16:v34:v53:v82.2': 0.02817298099398613, '789_ClusterDist8:v10:v16:v34:v53:v82.6': 0.020530452951788902, '789_ClusterDist8:v10:v16:v34:v53:v82.0': 0.019206328317523003, '789_ClusterDist8:v10:v16:v34:v53:v82.7': 0.018205460160970688, '789_ClusterDist8:v10:v16:v34:v53:v82.5': 0.016853420063853264, '789_ClusterDist8:v10:v16:v34:v53:v82.3': 0.014114800840616226, '789_ClusterDist8:v10:v16:v34:v53:v82.4': 0.012406773865222931, '789_ClusterDist8:v10:v16:v34:v53:v82.1': 0.012070521712303162}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v16', 'v34', 'v53', 'v82'],
                  'random_state': 3689927464,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=789, **params)

        # Gene Normalized Importance: 0.018719
        # Transformed Feature Names and Importances: {'795_Freq:v107:v110:v3:v47:v75:v91': 0.018718743696808815}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v107', 'v110', 'v3', 'v47', 'v75', 'v91'],
                  'norm': True,
                  'random_state': 3202806745}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=795, **params)

        # Gene Normalized Importance: 0.13824
        # Transformed Feature Names and Importances: {'797_ClusterDist8:v21:v40:v50:v85.1': 0.02787000499665737, '797_ClusterDist8:v21:v40:v50:v85.2': 0.022752635180950165, '797_ClusterDist8:v21:v40:v50:v85.6': 0.01745285466313362, '797_ClusterDist8:v21:v40:v50:v85.7': 0.01705792173743248, '797_ClusterDist8:v21:v40:v50:v85.4': 0.015918375924229622, '797_ClusterDist8:v21:v40:v50:v85.3': 0.01364590972661972, '797_ClusterDist8:v21:v40:v50:v85.5': 0.011919962242245674, '797_ClusterDist8:v21:v40:v50:v85.0': 0.011622447520494461}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v21', 'v40', 'v50', 'v85'],
                  'random_state': 1771158900,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=797, **params)

        # Gene Normalized Importance: 0.039591
        # Transformed Feature Names and Importances: {'804_CVCatNumEnc:v24:v79:v95.count': 0.021062323823571205, '804_CVCatNumEnc:v24:v79:v94.count': 0.01852862536907196}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v24', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': None,
                  'num_cols': ['v94', 'v95'],
                  'num_folds': 5,
                  'random_state': 860411659}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=804, **params)

        # Gene Normalized Importance: 0.083134
        # Transformed Feature Names and Importances: {'810_TruncSVD:v50:v88.0': 0.0831337422132492}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2, 'num_cols': ['v50', 'v88'], 'random_state': 1728006627}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=810, **params)

        # Gene Normalized Importance: 0.064542
        # Transformed Feature Names and Importances: {'811_CVCatNumEnc:v22:v24:v30:v56:v10.min': 0.02026190795004368, '811_CVCatNumEnc:v22:v24:v30:v56:v60.min': 0.01666794903576374, '811_CVCatNumEnc:v22:v24:v30:v56:v50.min': 0.014802810736000538, '811_CVCatNumEnc:v22:v24:v30:v56:v118.min': 0.012809074483811855}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v22', 'v24', 'v30', 'v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 3,
                  'num_cols': ['v10', 'v118', 'v50', 'v60'],
                  'num_folds': 5,
                  'random_state': 2931822766}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=811, **params)

        # Gene Normalized Importance: 0.018957
        # Transformed Feature Names and Importances: {'812_NumToCatWoE:v130:v21.0': 0.018956610932946205}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 100,
                  'cv_type': 'KFold',
                  'num_cols': ['v130', 'v21'],
                  'num_folds': 5,
                  'random_state': 3047733138}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=812, **params)

        # Gene Normalized Importance: 0.022342
        # Transformed Feature Names and Importances: {'820_WoE:v107:v113:v31:v66:v91.0': 0.022342374548316002}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v113', 'v31', 'v66', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 236500102}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=820, **params)

        # Gene Normalized Importance: 0.077217
        # Transformed Feature Names and Importances: {'821_ClusterDist4:v103:v106:v13:v28:v40:v50:v97.0': 0.0222878847271204, '821_ClusterDist4:v103:v106:v13:v28:v40:v50:v97.3': 0.02020701766014099, '821_ClusterDist4:v103:v106:v13:v28:v40:v50:v97.2': 0.018909920006990433, '821_ClusterDist4:v103:v106:v13:v28:v40:v50:v97.1': 0.015812233090400696}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v103', 'v106', 'v13', 'v28', 'v40', 'v50', 'v97'],
                  'random_state': 3798939722,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=821, **params)

        # Gene Normalized Importance: 0.018055
        # Transformed Feature Names and Importances: {'831_Freq:v47:v52:v56:v66:v79': 0.018054533749818802}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v47', 'v52', 'v56', 'v66', 'v79'],
                  'norm': True,
                  'random_state': 49572121}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=831, **params)

        # Gene Normalized Importance: 0.029551
        # Transformed Feature Names and Importances: {'833_WoE:v113:v3:v47.0': 0.02955080382525921}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v3', 'v47'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1717931163}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=833, **params)

        # Gene Normalized Importance: 0.17237
        # Transformed Feature Names and Importances: {'844_ClusterDist10:v102:v14:v40:v50:v82:v94.5': 0.023450609296560287, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.4': 0.019800357520580292, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.8': 0.01947726123034954, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.3': 0.018666671589016914, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.7': 0.018048817291855812, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.1': 0.01767454668879509, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.2': 0.016455044969916344, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.6': 0.014365098439157009, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.0': 0.013502522371709347, '844_ClusterDist10:v102:v14:v40:v50:v82:v94.9': 0.010924841277301311}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v102', 'v14', 'v40', 'v50', 'v82', 'v94'],
                  'random_state': 2453802539,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=844, **params)

        # Gene Normalized Importance: 0.048304
        # Transformed Feature Names and Importances: {'849_CVCatNumEnc:v113:v22:v31:v79:v42.min': 0.017466137185692787, '849_CVCatNumEnc:v113:v22:v31:v79:v127.min': 0.01746104657649994, '849_CVCatNumEnc:v113:v22:v31:v79:v78.min': 0.013376671820878983}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v22', 'v31', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': None,
                  'num_cols': ['v127', 'v42', 'v78'],
                  'num_folds': 5,
                  'random_state': 1683569107}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=849, **params)

        # Gene Normalized Importance: 0.15859
        # Transformed Feature Names and Importances: {'850_CVCatNumEnc:v31:v66:v38.sd': 0.11528326570987701, '850_CVCatNumEnc:v31:v66:v50.sd': 0.04330235347151756}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v31', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 1,
                  'num_cols': ['v38', 'v50'],
                  'num_folds': 5,
                  'random_state': 136860226}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=850, **params)

        # Gene Normalized Importance: 0.048304
        # Transformed Feature Names and Importances: {'853_ClusterDist4:v102:v114:v50:v87:v98.3': 0.018540825694799423, '853_ClusterDist4:v102:v114:v50:v87:v98.0': 0.015326141379773617, '853_ClusterDist4:v102:v114:v50:v87:v98.2': 0.009615868330001831, '853_ClusterDist4:v102:v114:v50:v87:v98.1': 0.004821487236768007}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v102', 'v114', 'v50', 'v87', 'v98'],
                  'random_state': 669215746,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=853, **params)

        # Gene Normalized Importance: 0.016881
        # Transformed Feature Names and Importances: {'855_NumToCatTE:v10:v34:v49:v50:v67:v7:v89.0': 0.01688111014664173}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v10', 'v34', 'v49', 'v50', 'v67', 'v7', 'v89'],
                  'num_folds': 5,
                  'random_state': 3910713887,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=855, **params)

        # Gene Normalized Importance: 0.018421
        # Transformed Feature Names and Importances: {'861_NumCatTE:v119:v31.0': 0.018420755863189697}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cat_cols': ['v31'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v119'],
                  'num_folds': 5,
                  'random_state': 2124316211,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=861, **params)

        # Gene Normalized Importance: 0.17272
        # Transformed Feature Names and Importances: {'862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.1': 0.03544158861041069, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.8': 0.023358168080449104, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.3': 0.01770954579114914, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.9': 0.017454681918025017, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.0': 0.017054708674550056, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.6': 0.015926873311400414, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.5': 0.015031855553388596, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.4': 0.012210327200591564, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.7': 0.009605073370039463, '862_ClusterDist10:v11:v114:v18:v27:v36:v37:v45:v97:v98.2': 0.008925892412662506}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v11', 'v114', 'v18', 'v27', 'v36', 'v37', 'v45', 'v97', 'v98'],
                  'random_state': 3496410655,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=862, **params)

        # Gene Normalized Importance: 0.013806
        # Transformed Feature Names and Importances: {'871_CVTE:v22:v66.0': 0.013805677182972431}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v22', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1235394666,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=871, **params)

        # Gene Normalized Importance: 0.017543
        # Transformed Feature Names and Importances: {'874_CVTE:v112:v3:v30:v31:v56:v66.0': 0.017543304711580276}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v112', 'v3', 'v30', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 2658921206,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=874, **params)

        # Gene Normalized Importance: 0.046291
        # Transformed Feature Names and Importances: {'875_NumToCatWoE:v120:v129:v131:v50:v72.0': 0.04629084840416908}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 10,
                  'cv_type': 'KFold',
                  'num_cols': ['v120', 'v129', 'v131', 'v50', 'v72'],
                  'num_folds': 5,
                  'random_state': 2229700316}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=875, **params)

        # Gene Normalized Importance: 0.058485
        # Transformed Feature Names and Importances: {'882_TruncSVD:v10:v114:v119:v20:v37:v50:v60:v87.1': 0.023574765771627426, '882_TruncSVD:v10:v114:v119:v20:v37:v50:v60:v87.2': 0.020949712023139, '882_TruncSVD:v10:v114:v119:v20:v37:v50:v60:v87.0': 0.013960626907646656}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v10', 'v114', 'v119', 'v20', 'v37', 'v50', 'v60', 'v87'],
                  'random_state': 4072692382}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=882, **params)

        # Gene Normalized Importance: 0.018086
        # Transformed Feature Names and Importances: {'883_NumCatTE:v112:v56:v66:v79:v88.0': 0.018086107447743416}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v112', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v88'],
                  'num_folds': 5,
                  'random_state': 2048744797,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=883, **params)

        # Gene Normalized Importance: 0.066634
        # Transformed Feature Names and Importances: {'884_CVCatNumEnc:v31:v56:v79:v91:v50.min': 0.020582450553774834, '884_CVCatNumEnc:v31:v56:v79:v91:v21.min': 0.017035512253642082, '884_CVCatNumEnc:v31:v56:v79:v91:v86.min': 0.01489350851625204, '884_CVCatNumEnc:v31:v56:v79:v91:v26.min': 0.014122680760920048}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v31', 'v56', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 10,
                  'num_cols': ['v21', 'v26', 'v50', 'v86'],
                  'num_folds': 5,
                  'random_state': 4147158322}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=884, **params)

        # Gene Normalized Importance: 0.069054
        # Transformed Feature Names and Importances: {'886_NumCatTE:v116:v123:v24:v26:v31:v44:v71:v79.0': 0.06905382871627808}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v24', 'v31', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v116', 'v123', 'v26', 'v44'],
                  'num_folds': 5,
                  'random_state': 81191646,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=886, **params)

        # Gene Normalized Importance: 0.087299
        # Transformed Feature Names and Importances: {'887_ClusterDist6:v21:v97.0': 0.018789703026413918, '887_ClusterDist6:v21:v97.3': 0.015904314815998077, '887_ClusterDist6:v21:v97.4': 0.015254358761012554, '887_ClusterDist6:v21:v97.5': 0.013639537617564201, '887_ClusterDist6:v21:v97.1': 0.013543984852731228, '887_ClusterDist6:v21:v97.2': 0.010167035274207592}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v21', 'v97'],
                  'random_state': 2433902290,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=887, **params)

        # Gene Normalized Importance: 0.14028
        # Transformed Feature Names and Importances: {'890_ClusterDist6:v10:v50:v58.3': 0.03679898753762245, '890_ClusterDist6:v10:v50:v58.4': 0.03598048537969589, '890_ClusterDist6:v10:v50:v58.1': 0.024078352376818657, '890_ClusterDist6:v10:v50:v58.5': 0.017605002969503403, '890_ClusterDist6:v10:v50:v58.2': 0.013570599257946014, '890_ClusterDist6:v10:v50:v58.0': 0.012250088155269623}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v50', 'v58'],
                  'random_state': 406103125,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=890, **params)

        # Gene Normalized Importance: 0.10012
        # Transformed Feature Names and Importances: {'891_ClusterDist6:v128:v45:v50.0': 0.017873607575893402, '891_ClusterDist6:v128:v45:v50.5': 0.017869437113404274, '891_ClusterDist6:v128:v45:v50.3': 0.017856411635875702, '891_ClusterDist6:v128:v45:v50.2': 0.01757030375301838, '891_ClusterDist6:v128:v45:v50.1': 0.015629414469003677, '891_ClusterDist6:v128:v45:v50.4': 0.013323422521352768}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v128', 'v45', 'v50'],
                  'random_state': 2039375301,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=891, **params)

        # Gene Normalized Importance: 0.016526
        # Transformed Feature Names and Importances: {'900_NumCatTE:v112:v31:v34:v66:v71:v83.0': 0.01652555912733078}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v112', 'v31', 'v66', 'v71'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v34', 'v83'],
                  'num_folds': 5,
                  'random_state': 580552004,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=900, **params)

        # Gene Normalized Importance: 0.11307
        # Transformed Feature Names and Importances: {'903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.0': 0.020526548847556114, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.2': 0.017395930364727974, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.7': 0.017357196658849716, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.4': 0.01594172790646553, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.1': 0.014487328939139843, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.5': 0.014327621087431908, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.6': 0.013035438023507595, '903_ClusterDist8:v129:v16:v21:v32:v50:v78:v87.3': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v129', 'v16', 'v21', 'v32', 'v50', 'v78', 'v87'],
                  'random_state': 425427904,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=903, **params)

        # Gene Normalized Importance: 0.093673
        # Transformed Feature Names and Importances: {'907_NumToCatTE:v14:v50.0': 0.09367319196462631}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v14', 'v50'],
                  'num_folds': 5,
                  'random_state': 2179379012,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=907, **params)

        # Gene Normalized Importance: 0.082888
        # Transformed Feature Names and Importances: {'915_WoE:v113:v24:v31:v66.0': 0.08288834244012833}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v113', 'v24', 'v31', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 299508155}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=915, **params)

        # Gene Normalized Importance: 0.09697
        # Transformed Feature Names and Importances: {'931_ClusterDist8:v102:v128:v17:v43:v50:v7.2': 0.019729170948266983, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.1': 0.018274536356329918, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.6': 0.017205679789185524, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.4': 0.016883356496691704, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.5': 0.01379068661481142, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.3': 0.011086429469287395, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.0': 0.0, '931_ClusterDist8:v102:v128:v17:v43:v50:v7.7': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v102', 'v128', 'v17', 'v43', 'v50', 'v7'],
                  'random_state': 1848075131,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=931, **params)

        # Gene Normalized Importance: 0.62444
        # Transformed Feature Names and Importances: {'946_NumCatTE:v113:v50.0': 0.6244441866874695}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v113'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 2068828424,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=946, **params)

        # Gene Normalized Importance: 0.038099
        # Transformed Feature Names and Importances: {'953_WoE:v47:v52:v56:v66:v71:v79.0': 0.03809898719191551}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v47', 'v52', 'v56', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3283567689}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=953, **params)

        # Gene Normalized Importance: 0.014937
        # Transformed Feature Names and Importances: {'954_NumCatTE:v127:v56.0': 0.01493675448000431}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v127'],
                  'num_folds': 5,
                  'random_state': 2069168108,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=954, **params)

        # Gene Normalized Importance: 0.024292
        # Transformed Feature Names and Importances: {'964_WoE:v56:v79.0': 0.02429208531975746}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v56', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 162846044}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=964, **params)

        # Gene Normalized Importance: 0.02525
        # Transformed Feature Names and Importances: {'965_NumToCatWoE:v21:v26:v50.0': 0.02524985373020172}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 10,
                  'cv_type': 'KFold',
                  'num_cols': ['v21', 'v26', 'v50'],
                  'num_folds': 5,
                  'random_state': 2395738589}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=965, **params)

        # Gene Normalized Importance: 0.017482
        # Transformed Feature Names and Importances: {'968_ClusterTEClusterID20:v26:v34:v41:v45:v49:v50:v58:v89:v90.0': 0.017482170835137367}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [5, 10, 20, 50], 'unique_vals': [False], 'l2_norm': [False, True], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'clust_num': 20,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'l2_norm': True,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v26', 'v34', 'v41', 'v45', 'v49', 'v50', 'v58', 'v89', 'v90'],
                  'num_folds': 5,
                  'random_state': 2577395984,
                  'steepness': 10,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterTETransformer', col_type='numeric', gene_index=968, **params)

        # Gene Normalized Importance: 0.018097
        # Transformed Feature Names and Importances: {'971_CVTE:v113:v22:v24:v30:v31:v47:v66:v79.0': 0.01809655874967575}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v22', 'v24', 'v30', 'v31', 'v47', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1933067435,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=971, **params)

        # Gene Normalized Importance: 0.052156
        # Transformed Feature Names and Importances: {'972_TruncSVD:v105:v40:v50:v60:v61:v68:v85:v86.1': 0.03574100136756897, '972_TruncSVD:v105:v40:v50:v60:v61:v68:v85:v86.0': 0.016414841637015343}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2,
                  'num_cols': ['v105', 'v40', 'v50', 'v60', 'v61', 'v68', 'v85', 'v86'],
                  'random_state': 2007894170}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=972, **params)

        # Gene Normalized Importance: 0.018633
        # Transformed Feature Names and Importances: {'973_CVCatNumEnc:v113:v79:v84.mean': 0.01863274909555912}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': None,
                  'num_cols': ['v84'],
                  'num_folds': 5,
                  'random_state': 3641917710}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=973, **params)

        # Gene Normalized Importance: 0.016833
        # Transformed Feature Names and Importances: {'981_NumCatTE:v127:v24:v3:v30:v50:v63:v66:v95.0': 0.016832830384373665}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v24', 'v3', 'v30', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v127', 'v50', 'v63', 'v95'],
                  'num_folds': 5,
                  'random_state': 3953825216,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=981, **params)

        # Gene Normalized Importance: 0.016505
        # Transformed Feature Names and Importances: {'988_WoE:v107:v47:v71:v79.0': 0.016505379229784012}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v47', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3385953905}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=988, **params)

        # Gene Normalized Importance: 0.11995
        # Transformed Feature Names and Importances: {'989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.1': 0.026085715740919113, '989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.4': 0.022638272494077682, '989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.0': 0.020988956093788147, '989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.2': 0.01825733110308647, '989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.3': 0.01641523651778698, '989_ClusterDist6:v10:v111:v123:v40:v50:v72:v8:v84.5': 0.015566425397992134}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v111', 'v123', 'v40', 'v50', 'v72', 'v8', 'v84'],
                  'random_state': 1233757781,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=989, **params)

        # Gene Normalized Importance: 0.019327
        # Transformed Feature Names and Importances: {'992_TruncSVD:v21:v50.0': 0.019327305257320404}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 2, 'num_cols': ['v21', 'v50'], 'random_state': 752471266}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=992, **params)

        # Gene Normalized Importance: 0.023256
        # Transformed Feature Names and Importances: {'996_WoE:v22:v24:v66:v79.0': 0.023256497457623482}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v24', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2723829877}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=996, **params)

        # Gene Normalized Importance: 0.032469
        # Transformed Feature Names and Importances: {'998_CVCatNumEnc:v113:v52:v4.max': 0.016391191631555557, '998_CVCatNumEnc:v113:v52:v43.max': 0.016078192740678787}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v52'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 100,
                  'num_cols': ['v4', 'v43'],
                  'num_folds': 5,
                  'random_state': 2272271108}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=998, **params)

        # Gene Normalized Importance: 0.052308
        # Transformed Feature Names and Importances: {'1007_CVCatNumEnc:v79:v50.sd': 0.0195370651781559, '1007_CVCatNumEnc:v79:v21.sd': 0.018121792003512383, '1007_CVCatNumEnc:v79:v67.sd': 0.01464929897338152, '1007_CVCatNumEnc:v79:v129.sd': 0.0}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 100,
                  'num_cols': ['v129', 'v21', 'v50', 'v67'],
                  'num_folds': 5,
                  'random_state': 2257182091}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1007, **params)

        # Gene Normalized Importance: 0.043799
        # Transformed Feature Names and Importances: {'1008_CVCatNumEnc:v110:v86.count': 0.016145745292305946, '1008_CVCatNumEnc:v110:v34.count': 0.015333104878664017, '1008_CVCatNumEnc:v110:v50.count': 0.012320218607783318, '1008_CVCatNumEnc:v110:v40.count': 0.0}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v110'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 100,
                  'num_cols': ['v34', 'v40', 'v50', 'v86'],
                  'num_folds': 5,
                  'random_state': 2902456142}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1008, **params)

        # Gene Normalized Importance: 0.023204
        # Transformed Feature Names and Importances: {'1010_WoE:v110:v125:v30:v31:v56:v66.0': 0.023204321041703224}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v125', 'v30', 'v31', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 98884417}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1010, **params)

        # Gene Normalized Importance: 0.31365
        # Transformed Feature Names and Importances: {'1011_NumCatTE:v110:v50.0': 0.3136511445045471}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v110'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 876956139,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1011, **params)

        # Gene Normalized Importance: 0.029509
        # Transformed Feature Names and Importances: {'1012_ClusterTEClusterID50:v50:v72:v78.0': 0.029509324580430984}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [5, 10, 20, 50], 'unique_vals': [False], 'l2_norm': [False, True], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'clust_num': 50,
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'l2_norm': False,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v50', 'v72', 'v78'],
                  'num_folds': 5,
                  'random_state': 2499311200,
                  'steepness': 10,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterTETransformer', col_type='numeric', gene_index=1012, **params)

        # Gene Normalized Importance: 0.051658
        # Transformed Feature Names and Importances: {'1016_WoE:v30:v52:v56:v66:v74.0': 0.051658421754837036}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v30', 'v52', 'v56', 'v66', 'v74'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4100584125}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1016, **params)

        # Gene Normalized Importance: 0.085508
        # Transformed Feature Names and Importances: {'1017_TruncSVD:v19:v63:v72.1': 0.06958580017089844, '1017_TruncSVD:v19:v63:v72.0': 0.015922117978334427}
        # Valid parameters: ['num_cols', 'n_components', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'n_components': [1, 2, 3]}
        params = {'n_components': 3,
                  'num_cols': ['v19', 'v63', 'v72'],
                  'random_state': 2996267103}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('TruncSVDNumTransformer', col_type='numeric', gene_index=1017, **params)

        # Gene Normalized Importance: 0.14535
        # Transformed Feature Names and Importances: {'1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.2': 0.025487316772341728, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.3': 0.025352848693728447, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.7': 0.01849840208888054, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.6': 0.016929250210523605, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.0': 0.014028681442141533, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.9': 0.013197234831750393, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.1': 0.01262753363698721, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.8': 0.010301525704562664, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.5': 0.008925987407565117, '1019_ClusterDist10:v11:v13:v130:v21:v23:v29:v50:v78:v80.4': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v11', 'v13', 'v130', 'v21', 'v23', 'v29', 'v50', 'v78', 'v80'],
                  'random_state': 3646838598,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1019, **params)

        # Gene Normalized Importance: 0.061018
        # Transformed Feature Names and Importances: {'1020_CVCatNumEnc:v66:v79:v50.min': 0.03730640932917595, '1020_CVCatNumEnc:v66:v79:v80.min': 0.02371136285364628}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v66', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 100,
                  'num_cols': ['v50', 'v80'],
                  'num_folds': 5,
                  'random_state': 3880207409}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1020, **params)

        # Gene Normalized Importance: 0.040076
        # Transformed Feature Names and Importances: {'1022_WoE:v107:v24:v47:v66:v79:v91.0': 0.04007646441459656}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v24', 'v47', 'v66', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3032724519}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1022, **params)

        # Gene Normalized Importance: 0.021197
        # Transformed Feature Names and Importances: {'1028_WoE:v107:v110:v112:v24:v30:v47:v52:v79.0': 0.021197237074375153}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v110', 'v112', 'v24', 'v30', 'v47', 'v52', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1465623700}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1028, **params)

        # Gene Normalized Importance: 0.023773
        # Transformed Feature Names and Importances: {'1037_WoE:v107:v56.0': 0.023772934451699257}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v56'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2198914077}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1037, **params)

        # Gene Normalized Importance: 0.016831
        # Transformed Feature Names and Importances: {'1040_CVTE:v112:v31:v47:v56.0': 0.016831329092383385}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v112', 'v31', 'v47', 'v56'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1760147152,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1040, **params)

        # Gene Normalized Importance: 0.017493
        # Transformed Feature Names and Importances: {'1048_CVTE:v24:v47:v56:v66:v71:v79:v91.0': 0.01749340072274208}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v24', 'v47', 'v56', 'v66', 'v71', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 1640110095,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1048, **params)

        # Gene Normalized Importance: 0.19443
        # Transformed Feature Names and Importances: {'1056_ClusterDist10:v101:v28:v43:v44:v50:v97.7': 0.03391829505562782, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.5': 0.025302410125732422, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.4': 0.01933762989938259, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.2': 0.018369140103459358, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.9': 0.017629990354180336, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.1': 0.01747637614607811, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.8': 0.017301587387919426, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.0': 0.01606196165084839, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.6': 0.015659481287002563, '1056_ClusterDist10:v101:v28:v43:v44:v50:v97.3': 0.013375957496464252}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v101', 'v28', 'v43', 'v44', 'v50', 'v97'],
                  'random_state': 3324348803,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1056, **params)

        # Gene Normalized Importance: 0.054994
        # Transformed Feature Names and Importances: {'1057_CVCatNumEnc:v110:v22:v30:v56:v51.max': 0.015760764479637146, '1057_CVCatNumEnc:v110:v22:v30:v56:v13.max': 0.01443440094590187, '1057_CVCatNumEnc:v110:v22:v30:v56:v117.max': 0.012463933788239956, '1057_CVCatNumEnc:v110:v22:v30:v56:v89.max': 0.012334953062236309}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v110', 'v22', 'v30', 'v56'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 10,
                  'num_cols': ['v117', 'v13', 'v51', 'v89'],
                  'num_folds': 5,
                  'random_state': 3334775619}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1057, **params)

        # Gene Normalized Importance: 0.01815
        # Transformed Feature Names and Importances: {'1059_CVCatNumEnc:v113:v91:v50.sd': 0.018149632960557938}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v91'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 10,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 2469910806}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1059, **params)

        # Gene Normalized Importance: 0.12438
        # Transformed Feature Names and Importances: {'1069_ClusterDist4:v114:v50.2': 0.06333014369010925, '1069_ClusterDist4:v114:v50.1': 0.027112765237689018, '1069_ClusterDist4:v114:v50.0': 0.017702415585517883, '1069_ClusterDist4:v114:v50.3': 0.01623852550983429}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v114', 'v50'],
                  'random_state': 288954416,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1069, **params)

        # Gene Normalized Importance: 0.12394
        # Transformed Feature Names and Importances: {'1072_ClusterDist6:v131:v50:v59:v6:v70:v72.3': 0.053399790078401566, '1072_ClusterDist6:v131:v50:v59:v6:v70:v72.4': 0.022677863016724586, '1072_ClusterDist6:v131:v50:v59:v6:v70:v72.0': 0.018041759729385376, '1072_ClusterDist6:v131:v50:v59:v6:v70:v72.2': 0.01793820410966873, '1072_ClusterDist6:v131:v50:v59:v6:v70:v72.1': 0.011877592653036118, '1072_ClusterDist6:v131:v50:v59:v6:v70:v72.5': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v131', 'v50', 'v59', 'v6', 'v70', 'v72'],
                  'random_state': 3843630283,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1072, **params)

        # Gene Normalized Importance: 0.055555
        # Transformed Feature Names and Importances: {'1074_WoE:v107:v112:v22:v31:v56:v66:v79:v91.0': 0.055555012077093124}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v107', 'v112', 'v22', 'v31', 'v56', 'v66', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 4169455014}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1074, **params)

        # Gene Normalized Importance: 0.061619
        # Transformed Feature Names and Importances: {'1075_CVCatNumEnc:v107:v113:v47:v66:v4.max': 0.025926636531949043, '1075_CVCatNumEnc:v107:v113:v47:v66:v85.max': 0.019544314593076706, '1075_CVCatNumEnc:v107:v113:v47:v66:v50.max': 0.016148339956998825}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v107', 'v113', 'v47', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': None,
                  'num_cols': ['v4', 'v50', 'v85'],
                  'num_folds': 5,
                  'random_state': 824064047}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1075, **params)

        # Gene Normalized Importance: 0.046032
        # Transformed Feature Names and Importances: {'1078_CVCatNumEnc:v125:v47:v56:v66:v97.mean': 0.015502868220210075, '1078_CVCatNumEnc:v125:v47:v56:v66:v50.mean': 0.015404812060296535, '1078_CVCatNumEnc:v125:v47:v56:v66:v80.mean': 0.015124019235372543}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v125', 'v47', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': None,
                  'num_cols': ['v50', 'v80', 'v97'],
                  'num_folds': 5,
                  'random_state': 3849149755}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1078, **params)

        # Gene Normalized Importance: 0.14725
        # Transformed Feature Names and Importances: {'1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.3': 0.02469339780509472, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.4': 0.020150160416960716, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.0': 0.019737575203180313, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.6': 0.016902144998311996, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.1': 0.016879690811038017, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.7': 0.016695981845259666, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.2': 0.016567109152674675, '1079_ClusterDist8:v119:v21:v38:v40:v50:v80:v92.5': 0.015625111758708954}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v119', 'v21', 'v38', 'v40', 'v50', 'v80', 'v92'],
                  'random_state': 705134898,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1079, **params)

        # Gene Normalized Importance: 0.026028
        # Transformed Feature Names and Importances: {'1080_CVCatNumEnc:v113:v50.mean': 0.02602762170135975}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'mean',
                  'min_rows': 10,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 463548765}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1080, **params)

        # Gene Normalized Importance: 0.030206
        # Transformed Feature Names and Importances: {'1084_CVCatNumEnc:v47:v52:v56:v66:v50.count': 0.02037901058793068, '1084_CVCatNumEnc:v47:v52:v56:v66:v10.count': 0.009826691821217537}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v47', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'count',
                  'min_rows': 100,
                  'num_cols': ['v10', 'v50'],
                  'num_folds': 5,
                  'random_state': 1437325051}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1084, **params)

        # Gene Normalized Importance: 0.023346
        # Transformed Feature Names and Importances: {'1085_NumCatTE:v107:v61:v62:v66:v74:v91.0': 0.02334641106426716}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v107', 'v66', 'v74', 'v91'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v61', 'v62'],
                  'num_folds': 5,
                  'random_state': 3046225166,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1085, **params)

        # Gene Normalized Importance: 0.070001
        # Transformed Feature Names and Importances: {'1087_CVCatNumEnc:v113:v30:v47:v52:v21.sd': 0.026459060609340668, '1087_CVCatNumEnc:v113:v30:v47:v52:v100.sd': 0.017205020412802696, '1087_CVCatNumEnc:v113:v30:v47:v52:v23.sd': 0.013672519475221634, '1087_CVCatNumEnc:v113:v30:v47:v52:v50.sd': 0.012664416804909706}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v113', 'v30', 'v47', 'v52'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 3,
                  'num_cols': ['v100', 'v21', 'v23', 'v50'],
                  'num_folds': 5,
                  'random_state': 2572580573}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1087, **params)

        # Gene Normalized Importance: 0.013788
        # Transformed Feature Names and Importances: {'1088_NumToCatTE:v44:v46:v61:v85:v9:v93.0': 0.013787979260087013}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v44', 'v46', 'v61', 'v85', 'v9', 'v93'],
                  'num_folds': 5,
                  'random_state': 3242251792,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=1088, **params)

        # Gene Normalized Importance: 0.13084
        # Transformed Feature Names and Importances: {'1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.2': 0.028217701241374016, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.1': 0.023218369111418724, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.3': 0.019792109727859497, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.6': 0.018353931605815887, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.5': 0.013770234771072865, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.0': 0.011580286547541618, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.4': 0.009181462228298187, '1095_ClusterDist8:v10:v26:v29:v40:v50:v9:v90.7': 0.006724416743963957}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v26', 'v29', 'v40', 'v50', 'v9', 'v90'],
                  'random_state': 550235761,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1095, **params)

        # Gene Normalized Importance: 0.07291
        # Transformed Feature Names and Importances: {'1096_WoE:v22:v30:v47:v56:v66:v79:v91.0': 0.07290974259376526}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v22', 'v30', 'v47', 'v56', 'v66', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 359466615}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1096, **params)

        # Gene Normalized Importance: 0.96069
        # Transformed Feature Names and Importances: {'1097_CVTE:v31:v47:v56:v66.0': 0.960689902305603}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v31', 'v47', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 3626646235,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1097, **params)

        # Gene Normalized Importance: 0.035049
        # Transformed Feature Names and Importances: {'1099_WoE:v110:v112:v22:v47:v56:v66:v71:v79.0': 0.035048697143793106}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v112', 'v22', 'v47', 'v56', 'v66', 'v71', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3416365561}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1099, **params)

        # Gene Normalized Importance: 0.011123
        # Transformed Feature Names and Importances: {'1100_CVTE:v113:v24:v52:v56:v79.0': 0.011123424395918846}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v24', 'v52', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 620981882,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1100, **params)

        # Gene Normalized Importance: 0.40139
        # Transformed Feature Names and Importances: {'1106_Freq:v66': 0.4013887047767639}
        # Valid parameters: ['cat_cols', 'norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'norm': [True, False]}
        params = {'cat_cols': ['v66'], 'norm': True, 'random_state': 2589155644}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('FrequentTransformer', col_type='categorical', gene_index=1106, **params)

        # Gene Normalized Importance: 0.025939
        # Transformed Feature Names and Importances: {'1109_CVTE:v113:v22:v24:v31:v47:v52:v56:v66:v79.0': 0.02593917027115822}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v113', 'v22', 'v24', 'v31', 'v47', 'v52', 'v56', 'v66', 'v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 2880353900,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1109, **params)

        # Gene Normalized Importance: 0.037093
        # Transformed Feature Names and Importances: {'1113_CVCatNumEnc:v56:v66:v50.max': 0.01655556820333004, '1113_CVCatNumEnc:v56:v66:v43.max': 0.013149320147931576, '1113_CVCatNumEnc:v56:v66:v124.max': 0.007387679070234299}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 3,
                  'num_cols': ['v124', 'v43', 'v50'],
                  'num_folds': 5,
                  'random_state': 275244142}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1113, **params)

        # Gene Normalized Importance: 0.17214
        # Transformed Feature Names and Importances: {'1116_CVTE:v110:v113:v22:v24:v47:v52:v66:v71.0': 0.1721358448266983}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'cat_cols': ['v110', 'v113', 'v22', 'v24', 'v47', 'v52', 'v66', 'v71'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_folds': 5,
                  'random_state': 360763783,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVTargetEncodeTransformer', col_type='categorical', gene_index=1116, **params)

        # Gene Normalized Importance: 0.026678
        # Transformed Feature Names and Importances: {'1121_NumToCatTE:v50.0': 0.026677940040826797}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 1633516114,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=1121, **params)

        # Gene Normalized Importance: 0.19718
        # Transformed Feature Names and Importances: {'1124_ClusterDist10:v10:v129:v50.1': 0.041928987950086594, '1124_ClusterDist10:v10:v129:v50.4': 0.026287605985999107, '1124_ClusterDist10:v10:v129:v50.8': 0.024248236790299416, '1124_ClusterDist10:v10:v129:v50.0': 0.01912527345120907, '1124_ClusterDist10:v10:v129:v50.3': 0.01750866323709488, '1124_ClusterDist10:v10:v129:v50.2': 0.016746873036026955, '1124_ClusterDist10:v10:v129:v50.9': 0.016338713467121124, '1124_ClusterDist10:v10:v129:v50.5': 0.01614975556731224, '1124_ClusterDist10:v10:v129:v50.6': 0.012864436022937298, '1124_ClusterDist10:v10:v129:v50.7': 0.005977449472993612}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v129', 'v50'],
                  'random_state': 18886350,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1124, **params)

        # Gene Normalized Importance: 0.018563
        # Transformed Feature Names and Importances: {'1125_NumToCatTE:v100:v33:v50.0': 0.018563343212008476}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v100', 'v33', 'v50'],
                  'num_folds': 5,
                  'random_state': 3981204069,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=1125, **params)

        # Gene Normalized Importance: 0.030827
        # Transformed Feature Names and Importances: {'1131_NumCatTE:v120:v31:v66.0': 0.030826790258288383}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v31', 'v66'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 10,
                  'multi_class': False,
                  'num_cols': ['v120'],
                  'num_folds': 5,
                  'random_state': 2989183811,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1131, **params)

        # Gene Normalized Importance: 0.01185
        # Transformed Feature Names and Importances: {'1132_v5': 0.011850380338728428}
        # Valid parameters: ['num_cols', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        params = {'num_cols': ['v5'], 'random_state': 2700777153}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('OriginalTransformer', col_type='numeric', gene_index=1132, **params)

        # Gene Normalized Importance:  1.1687
        # Transformed Feature Names and Importances: {'1138_ClusterDist8:v50.1': 0.41548222303390503, '1138_ClusterDist8:v50.6': 0.3116881847381592, '1138_ClusterDist8:v50.2': 0.26049816608428955, '1138_ClusterDist8:v50.3': 0.04741387069225311, '1138_ClusterDist8:v50.5': 0.04412267357110977, '1138_ClusterDist8:v50.4': 0.03884456306695938, '1138_ClusterDist8:v50.7': 0.03048211894929409, '1138_ClusterDist8:v50.0': 0.0202072411775589}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 8,
                  'l2_norm': False,
                  'num_cols': ['v50'],
                  'random_state': 1091164176,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1138, **params)

        # Gene Normalized Importance: 0.084609
        # Transformed Feature Names and Importances: {'1141_WoE:v110:v22:v30:v31:v47:v56:v66:v79:v91.0': 0.08460891246795654}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v22', 'v30', 'v31', 'v47', 'v56', 'v66', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1139477784}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1141, **params)

        # Gene Normalized Importance: 0.15141
        # Transformed Feature Names and Importances: {'1150_ClusterDist10:v10:v105:v12:v120:v50.4': 0.018145496025681496, '1150_ClusterDist10:v10:v105:v12:v120:v50.9': 0.017538342624902725, '1150_ClusterDist10:v10:v105:v12:v120:v50.8': 0.01732308603823185, '1150_ClusterDist10:v10:v105:v12:v120:v50.5': 0.015980428084731102, '1150_ClusterDist10:v10:v105:v12:v120:v50.6': 0.01544137578457594, '1150_ClusterDist10:v10:v105:v12:v120:v50.3': 0.015086749568581581, '1150_ClusterDist10:v10:v105:v12:v120:v50.1': 0.01447319332510233, '1150_ClusterDist10:v10:v105:v12:v120:v50.7': 0.014069893397390842, '1150_ClusterDist10:v10:v105:v12:v120:v50.0': 0.012280129827558994, '1150_ClusterDist10:v10:v105:v12:v120:v50.2': 0.011075790971517563}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v105', 'v12', 'v120', 'v50'],
                  'random_state': 615307849,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1150, **params)

        # Gene Normalized Importance: 0.078904
        # Transformed Feature Names and Importances: {'1153_ClusterDist4:v59:v6.0': 0.025376971811056137, '1153_ClusterDist4:v59:v6.2': 0.022213034331798553, '1153_ClusterDist4:v59:v6.1': 0.019174907356500626, '1153_ClusterDist4:v59:v6.3': 0.012138846330344677}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v59', 'v6'],
                  'random_state': 3713257777,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1153, **params)

        # Gene Normalized Importance: 0.025751
        # Transformed Feature Names and Importances: {'1155_NumToCatWoE:v105:v120:v17:v40:v49:v5:v69:v8.0': 0.02575063519179821}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'binner_type', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'binner_type': ['equal']}
        params = {'binner_type': 'equal',
                  'bins': 250,
                  'cv_type': 'KFold',
                  'num_cols': ['v105', 'v120', 'v17', 'v40', 'v49', 'v5', 'v69', 'v8'],
                  'num_folds': 5,
                  'random_state': 891482084}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatWoETransformer', col_type='numeric', gene_index=1155, **params)

        # Gene Normalized Importance:  0.0284
        # Transformed Feature Names and Importances: {'1157_CVCatNumEnc:v107:v31:v56:v79:v32.sd': 0.014277545735239983, '1157_CVCatNumEnc:v107:v31:v56:v79:v50.sd': 0.014122389256954193}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v107', 'v31', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'sd',
                  'min_rows': 3,
                  'num_cols': ['v32', 'v50'],
                  'num_folds': 5,
                  'random_state': 1306901765}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1157, **params)

        # Gene Normalized Importance: 0.017354
        # Transformed Feature Names and Importances: {'1160_NumToCatTE:v104:v108:v14:v18:v48:v59.0': 0.01735360361635685}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v104', 'v108', 'v14', 'v18', 'v48', 'v59'],
                  'num_folds': 5,
                  'random_state': 3673898377,
                  'steepness': 5}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=1160, **params)

        # Gene Normalized Importance: 0.047874
        # Transformed Feature Names and Importances: {'1163_CVCatNumEnc:v24:v52:v66:v71:v83.min': 0.01777755096554756, '1163_CVCatNumEnc:v24:v52:v66:v71:v6.min': 0.015926022082567215, '1163_CVCatNumEnc:v24:v52:v66:v71:v126.min': 0.014170912094414234}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v24', 'v52', 'v66', 'v71'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'min',
                  'min_rows': 10,
                  'num_cols': ['v126', 'v6', 'v83'],
                  'num_folds': 5,
                  'random_state': 2911028623}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1163, **params)

        # Gene Normalized Importance: 0.14691
        # Transformed Feature Names and Importances: {'1166_ClusterDist10:v116:v127:v2:v21:v50.0': 0.018862366676330566, '1166_ClusterDist10:v116:v127:v2:v21:v50.4': 0.018518002703785896, '1166_ClusterDist10:v116:v127:v2:v21:v50.5': 0.015541110187768936, '1166_ClusterDist10:v116:v127:v2:v21:v50.9': 0.015527524054050446, '1166_ClusterDist10:v116:v127:v2:v21:v50.2': 0.015368390828371048, '1166_ClusterDist10:v116:v127:v2:v21:v50.8': 0.01490644458681345, '1166_ClusterDist10:v116:v127:v2:v21:v50.6': 0.014144747518002987, '1166_ClusterDist10:v116:v127:v2:v21:v50.3': 0.013966044411063194, '1166_ClusterDist10:v116:v127:v2:v21:v50.1': 0.011338434182107449, '1166_ClusterDist10:v116:v127:v2:v21:v50.7': 0.008736385963857174}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v116', 'v127', 'v2', 'v21', 'v50'],
                  'random_state': 1678426264,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1166, **params)

        # Gene Normalized Importance: 0.016674
        # Transformed Feature Names and Importances: {'1167_NumCatTE:v26:v49:v50:v56:v66:v91.0': 0.01667448878288269}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 100,
                  'cat_cols': ['v56', 'v66', 'v91'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v26', 'v49', 'v50'],
                  'num_folds': 5,
                  'random_state': 3409662152,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1167, **params)

        # Gene Normalized Importance: 0.019449
        # Transformed Feature Names and Importances: {'1173_NumCatTE:v10:v34:v61:v79.0': 0.01944873109459877}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v79'],
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': 20,
                  'multi_class': False,
                  'num_cols': ['v10', 'v34', 'v61'],
                  'num_folds': 5,
                  'random_state': 224217539,
                  'steepness': 1}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1173, **params)

        # Gene Normalized Importance: 0.066323
        # Transformed Feature Names and Importances: {'1179_ClusterDist4:v120:v130:v50:v63:v73.3': 0.01889331452548504, '1179_ClusterDist4:v120:v130:v50:v63:v73.2': 0.018399696797132492, '1179_ClusterDist4:v120:v130:v50:v63:v73.0': 0.015967844054102898, '1179_ClusterDist4:v120:v130:v50:v63:v73.1': 0.013061951845884323}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v120', 'v130', 'v50', 'v63', 'v73'],
                  'random_state': 4287914898,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1179, **params)

        # Gene Normalized Importance: 0.072033
        # Transformed Feature Names and Importances: {'1185_ClusterDist4:v34:v40:v50:v84.0': 0.02056809514760971, '1185_ClusterDist4:v34:v40:v50:v84.2': 0.020297260954976082, '1185_ClusterDist4:v34:v40:v50:v84.1': 0.019405053928494453, '1185_ClusterDist4:v34:v40:v50:v84.3': 0.011762886308133602}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 4,
                  'l2_norm': False,
                  'num_cols': ['v34', 'v40', 'v50', 'v84'],
                  'random_state': 3624972433,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1185, **params)

        # Gene Normalized Importance: 0.042359
        # Transformed Feature Names and Importances: {'1192_WoE:v110:v113:v125:v22:v24:v30:v47:v56:v79.0': 0.042359285056591034}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v113', 'v125', 'v22', 'v24', 'v30', 'v47', 'v56', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 1625622199}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1192, **params)

        # Gene Normalized Importance: 0.24947
        # Transformed Feature Names and Importances: {'1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.9': 0.049980614334344864, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.2': 0.04273536428809166, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.8': 0.039119843393564224, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.6': 0.02899646759033203, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.7': 0.02022501826286316, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.3': 0.018055269494652748, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.4': 0.013868367299437523, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.0': 0.012716883793473244, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.5': 0.011918927542865276, '1199_ClusterDist10:v10:v101:v116:v122:v50:v72:v8.1': 0.011853363364934921}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v101', 'v116', 'v122', 'v50', 'v72', 'v8'],
                  'random_state': 1492011499,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1199, **params)

        # Gene Normalized Importance: 0.026873
        # Transformed Feature Names and Importances: {'1201_CVCatNumEnc:v107:v52:v56:v66:v50.max': 0.015396147966384888, '1201_CVCatNumEnc:v107:v52:v56:v66:v65.max': 0.011476929299533367}
        # Valid parameters: ['num_cols', 'cat_cols', 'func', 'min_rows', 'num_folds', 'random_state', 'cv_type', 'output_features_to_drop', 'drop_na', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'func': ['mean', 'sd', 'min', 'max', 'count'], 'min_rows': [None, 1, 3, 10, 100], 'num_folds': [5], 'random_state': [42], 'drop_na': [True], 'cv_type': ['KFold']}
        params = {'cat_cols': ['v107', 'v52', 'v56', 'v66'],
                  'cv_type': 'KFold',
                  'drop_na': True,
                  'func': 'max',
                  'min_rows': 3,
                  'num_cols': ['v50', 'v65'],
                  'num_folds': 5,
                  'random_state': 258979433}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('CVCatNumEncodeTransformer', col_type='numcat', gene_index=1201, **params)

        # Gene Normalized Importance: 0.029193
        # Transformed Feature Names and Importances: {'1202_WoE:v110:v125:v22:v3:v31:v56:v66:v74:v79.0': 0.02919270470738411}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v110', 'v125', 'v22', 'v3', 'v31', 'v56', 'v66', 'v74', 'v79'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 2795278998}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1202, **params)

        # Gene Normalized Importance: 0.093493
        # Transformed Feature Names and Importances: {'1207_NumCatTE:v11:v31:v50.0': 0.09349264949560165}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 10,
                  'cat_cols': ['v31'],
                  'cv_type': 'KFold',
                  'inflection_point': 10,
                  'min_rows': 100,
                  'multi_class': False,
                  'num_cols': ['v11', 'v50'],
                  'num_folds': 5,
                  'random_state': 3617459559,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1207, **params)

        # Gene Normalized Importance: 0.11085
        # Transformed Feature Names and Importances: {'1211_ClusterDist10:v26.0': 0.030690466985106468, '1211_ClusterDist10:v26.2': 0.019940881058573723, '1211_ClusterDist10:v26.1': 0.017519133165478706, '1211_ClusterDist10:v26.4': 0.016423789784312248, '1211_ClusterDist10:v26.6': 0.016410795971751213, '1211_ClusterDist10:v26.3': 0.009863073006272316, '1211_ClusterDist10:v26.5': 0.0, '1211_ClusterDist10:v26.7': 0.0, '1211_ClusterDist10:v26.8': 0.0}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 10,
                  'l2_norm': False,
                  'num_cols': ['v26'],
                  'random_state': 3854380900,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1211, **params)

        # Gene Normalized Importance: 0.030878
        # Transformed Feature Names and Importances: {'1213_NumCatTE:v105:v112:v125:v24:v30:v41:v42:v70.0': 0.03087821789085865}
        # Valid parameters: ['num_cols', 'cat_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 25,
                  'cat_cols': ['v112', 'v125', 'v24', 'v30'],
                  'cv_type': 'KFold',
                  'inflection_point': 100,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v105', 'v41', 'v42', 'v70'],
                  'num_folds': 5,
                  'random_state': 1385971655,
                  'steepness': 10}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumCatTETransformer', col_type='numcat', gene_index=1213, **params)

        # Gene Normalized Importance: 0.13101
        # Transformed Feature Names and Importances: {'1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.0': 0.027886848896741867, '1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.2': 0.02601017616689205, '1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.3': 0.025041280314326286, '1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.5': 0.019548851996660233, '1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.1': 0.01953950710594654, '1217_ClusterDist6:v12:v127:v42:v50:v72:v8:v82.4': 0.01298363134264946}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 6,
                  'l2_norm': False,
                  'num_cols': ['v12', 'v127', 'v42', 'v50', 'v72', 'v8', 'v82'],
                  'random_state': 1533006717,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1217, **params)

        # Gene Normalized Importance: 0.019168
        # Transformed Feature Names and Importances: {'1218_WoE:v24:v56:v79:v91.0': 0.019167503342032433}
        # Valid parameters: ['cat_cols', 'num_folds', 'cv_type', 'max_k', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'max_k': [5]}
        params = {'cat_cols': ['v24', 'v56', 'v79', 'v91'],
                  'cv_type': 'KFold',
                  'max_k': 5,
                  'num_folds': 5,
                  'random_state': 3785013303}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('WeightOfEvidenceTransformer', col_type='categorical', gene_index=1218, **params)

        # Gene Normalized Importance: 0.036356
        # Transformed Feature Names and Importances: {'1222_ClusterDist2:v10:v116:v118:v27:v38:v50:v59:v82:v97.0': 0.02045796811580658, '1222_ClusterDist2:v10:v116:v118:v27:v38:v50:v59:v82:v97.1': 0.015898365527391434}
        # Valid parameters: ['num_cols', 'clust_num', 'unique_vals', 'l2_norm', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'clust_num': [2, 4, 6, 8, 10], 'unique_vals': [False], 'l2_norm': [False]}
        params = {'clust_num': 2,
                  'l2_norm': False,
                  'num_cols': ['v10', 'v116', 'v118', 'v27', 'v38', 'v50', 'v59', 'v82', 'v97'],
                  'random_state': 3520050125,
                  'unique_vals': False}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('ClusterDistTransformer', col_type='numeric', gene_index=1222, **params)

        # Gene Normalized Importance: 0.04145
        # Transformed Feature Names and Importances: {'1224_NumToCatTE:v50.0': 0.041449811309576035}
        # Valid parameters: ['num_cols', 'bins', 'num_folds', 'cv_type', 'inflection_point', 'steepness', 'min_rows', 'multi_class', 'random_state', 'output_features_to_drop', 'labels']
        # 'labels' parameter is handled internally by DAI
        # Allowed parameters and mutations (first mutation in list is default): {'bins': [25, 10, 100, 250], 'num_folds': [5], 'random_state': [42], 'cv_type': ['KFold'], 'inflection_point': [10, 20, 100], 'steepness': [3, 1, 5, 10], 'min_rows': [10, None, 20, 100], 'multi_class': [False]}
        params = {'bins': 250,
                  'cv_type': 'KFold',
                  'inflection_point': 20,
                  'min_rows': None,
                  'multi_class': False,
                  'num_cols': ['v50'],
                  'num_folds': 5,
                  'random_state': 1212456243,
                  'steepness': 3}
        # 'col_type' is used in some cases to get unique DAI transformer, and it does not need to be set independently of the transformer in most cases
        self.add_transformer('NumToCatTETransformer', col_type='numeric', gene_index=1224, **params)

